<html><head></head><body><pre style="background-color:#ffffff;"><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># AOT ID: ['31_forward']
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">ctypes </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">c_void_p, c_long, c_int
</span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">torch
</span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">math
</span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">random
</span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">os
</span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">tempfile
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">math </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">inf, nan
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.hooks </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">run_intermediate_hooks
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.utils </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">maybe_profile
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.codegen.memory_planning </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">_align </span><span style="font-weight:bold;color:#a71d5d;">as </span><span style="color:#323232;">align
</span><span style="color:#323232;">
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">device, empty_strided
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.async_compile </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">AsyncCompile
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.select_algorithm </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">extern_kernels
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.codegen.multi_kernel </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">MultiKernelCall
</span><span style="color:#323232;">
</span><span style="color:#323232;">aten </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.ops.aten
</span><span style="color:#323232;">inductor_ops </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.ops.inductor
</span><span style="color:#323232;">_quantized </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.ops._quantized
</span><span style="color:#323232;">assert_size_stride </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.</span><span style="color:#0086b3;">_C</span><span style="color:#323232;">._dynamo.guards.assert_size_stride
</span><span style="color:#323232;">empty_strided_cpu </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.</span><span style="color:#0086b3;">_C</span><span style="color:#323232;">._dynamo.guards._empty_strided_cpu
</span><span style="color:#323232;">empty_strided_cuda </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.</span><span style="color:#0086b3;">_C</span><span style="color:#323232;">._dynamo.guards._empty_strided_cuda
</span><span style="color:#323232;">empty_strided_xpu </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.</span><span style="color:#0086b3;">_C</span><span style="color:#323232;">._dynamo.guards._empty_strided_xpu
</span><span style="color:#323232;">reinterpret_tensor </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.</span><span style="color:#0086b3;">_C</span><span style="color:#323232;">._dynamo.guards._reinterpret_tensor
</span><span style="color:#323232;">alloc_from_pool </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">torch.ops.inductor._alloc_from_pool
</span><span style="color:#323232;">async_compile </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">AsyncCompile()
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/rq/crq43pxhw7fxvhnz6pmyjxuxxs2zyqzyuedawlh6h7sw7uuhaiqm.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %cat_default_13 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view, %full_default_13], 1), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_0 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_0'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[1073741824], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_0', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_0(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 551485440
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = tl.full([XBLOCK], True, tl.int1)
</span><span style="color:#183691;">    x0 = xindex % 4488
</span><span style="color:#183691;">    x1 = (xindex // 4488)
</span><span style="color:#183691;">    tmp0 = x0
</span><span style="color:#183691;">    tmp1 = tl.full([1], 0, tl.int64)
</span><span style="color:#183691;">    tmp2 = tmp0 &gt;= tmp1
</span><span style="color:#183691;">    tmp3 = tl.full([1], 4481, tl.int64)
</span><span style="color:#183691;">    tmp4 = tmp0 &lt; tmp3
</span><span style="color:#183691;">    tmp5 = tl.load(in_ptr0 + ((192*x0) + (860352*(x1 // 192)) + (x1 % 192)), tmp4, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tmp6 = tmp0 &gt;= tmp3
</span><span style="color:#183691;">    tmp7 = tl.full([1], 4488, tl.int64)
</span><span style="color:#183691;">    tmp8 = tmp0 &lt; tmp7
</span><span style="color:#183691;">    tmp9 = 0.0
</span><span style="color:#183691;">    tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
</span><span style="color:#183691;">    tmp11 = tl.where(tmp6, tmp9, tmp10)
</span><span style="color:#183691;">    tmp12 = tl.where(tmp4, tmp5, tmp11)
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x0 + (4544*x1)), tmp12, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">triton
</span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">triton.language </span><span style="font-weight:bold;color:#a71d5d;">as </span><span style="color:#323232;">tl
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.runtime.triton_heuristics </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">grid, split_scan_grid, grid_combo_kernels, start_graph, end_graph
</span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._C </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">_cuda_getCurrentRawStream </span><span style="font-weight:bold;color:#a71d5d;">as </span><span style="color:#323232;">get_raw_stream
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/uq/cuqacopc263yqslm7cjtv2gwtjjdagxpxbs2ua5dxyuomcwuf2mo.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %constant_pad_nd_default_1 : [num_users=1] = call_function[target=torch.ops.aten.constant_pad_nd.default](args = (%permute_1, [0, 7, 0, 7]), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_1 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_1'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[4194304], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_1', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_1(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 3482688
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    x0 = xindex % 4488
</span><span style="color:#183691;">    x1 = (xindex // 4488)
</span><span style="color:#183691;">    tmp0 = x0
</span><span style="color:#183691;">    tmp1 = tl.full([1], 4481, tl.int64)
</span><span style="color:#183691;">    tmp2 = tmp0 &lt; tmp1
</span><span style="color:#183691;">    tmp3 = x1
</span><span style="color:#183691;">    tmp4 = tl.full([1], 769, tl.int64)
</span><span style="color:#183691;">    tmp5 = tmp3 &lt; tmp4
</span><span style="color:#183691;">    tmp6 = tmp2 &amp; tmp5
</span><span style="color:#183691;">    tmp7 = tl.load(in_ptr0 + (x0 + (4481*x1)), tmp6 &amp; xmask, other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x0 + (4544*x1)), tmp7, xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/4q/c4qyt25xishegleoueg5hvdtf4akvu46vnvyv6fqf6a7bhnenjcj.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [matmul, out], Original ATen: [aten.clone, aten.add]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   matmul =&gt; clone_1
</span><span style="font-style:italic;color:#969896;">#   out =&gt; add
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %clone_1 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_2,), kwargs = {memory_format: torch.contiguous_format})
</span><span style="font-style:italic;color:#969896;">#   %add : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clone_1, %primals_3), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_add_clone_2 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_add_clone_2'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[524288, 256], tile_hint=TileHint.DEFAULT,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32', 4: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_2', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_add_clone_2(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    ynumel = 492160
</span><span style="color:#183691;">    xnumel = 192
</span><span style="color:#183691;">    yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
</span><span style="color:#183691;">    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
</span><span style="color:#183691;">    ymask = yindex &lt; ynumel
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    x2 = xindex
</span><span style="color:#183691;">    y0 = yindex % 769
</span><span style="color:#183691;">    y1 = (yindex // 769)
</span><span style="color:#183691;">    y3 = yindex
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (y0 + (776*x2) + (148992*y1)), xmask &amp; ymask, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp1 = tl.load(in_ptr1 + (y0), ymask, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp2 = tmp0 + tmp1
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x2 + (192*y3)), tmp2, xmask &amp; ymask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/ex/cexsgqmjkgiyvpbt6hab2z3fgqru5dyoxcty6a2f44iyt5ek65vd.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized, sigmoid, input_2], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   input_2 =&gt; mul_2
</span><span style="font-style:italic;color:#969896;">#   normalized =&gt; add_1, add_2, convert_element_type_5, convert_element_type_6, mul, mul_1, rsqrt, sub, var_mean
</span><span style="font-style:italic;color:#969896;">#   sigmoid =&gt; sigmoid
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_5 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%addmm, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_5, [1]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_1 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_3, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_1,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%addmm, %getitem_4), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub, %rsqrt), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_1 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul, %primals_7), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_2 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_1, %primals_6), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_6 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_2, torch.bfloat16), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sigmoid : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convert_element_type_6,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_2 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%addmm, %sigmoid), kwargs = {})
</span><span style="color:#323232;">triton_per_fused_mul_native_layer_norm_sigmoid_3 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_per_fused_mul_native_layer_norm_sigmoid_3'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.persistent_reduction(
</span><span style="color:#183691;">    size_hints=[1024, 1024],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: 'i32', 5: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mul_native_layer_norm_sigmoid_3', 'mutated_arg_names': [], 'no_x_dim': True, 'num_load': 3, 'num_reduction': 4, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_per_fused_mul_native_layer_norm_sigmoid_3(in_ptr0, in_ptr1, in_ptr2, out_ptr2, xnumel, rnumel):
</span><span style="color:#183691;">    xnumel = 640
</span><span style="color:#183691;">    XBLOCK: tl.constexpr = 1
</span><span style="color:#183691;">    rnumel = 1024
</span><span style="color:#183691;">    RBLOCK: tl.constexpr = 1024
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = tl.full([1], xoffset, tl.int32)
</span><span style="color:#183691;">    xmask = tl.full([RBLOCK], True, tl.int1)
</span><span style="color:#183691;">    rindex = tl.arange(0, RBLOCK)[:]
</span><span style="color:#183691;">    roffset = 0
</span><span style="color:#183691;">    rmask = tl.full([RBLOCK], True, tl.int1)
</span><span style="color:#183691;">    r1 = rindex
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (r1 + (1024*x0)), None).to(tl.float32)
</span><span style="color:#183691;">    tmp22 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp25 = tl.load(in_ptr2 + (r1), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp1 = tmp0.to(tl.float32)
</span><span style="color:#183691;">    tmp2 = tl.broadcast_to(tmp1, [RBLOCK])
</span><span style="color:#183691;">    tmp4 = tl.broadcast_to(tmp2, [RBLOCK])
</span><span style="color:#183691;">    tmp6 = triton_helpers.promote_to_tensor(tl.sum(tmp4, 0))
</span><span style="color:#183691;">    tmp7 = tl.full([1], 1024, tl.int32)
</span><span style="color:#183691;">    tmp8 = tmp7.to(tl.float32)
</span><span style="color:#183691;">    tmp9 = tmp6 / tmp8
</span><span style="color:#183691;">    tmp10 = tmp2 - tmp9
</span><span style="color:#183691;">    tmp11 = tmp10 * tmp10
</span><span style="color:#183691;">    tmp12 = tl.broadcast_to(tmp11, [RBLOCK])
</span><span style="color:#183691;">    tmp14 = triton_helpers.promote_to_tensor(tl.sum(tmp12, 0))
</span><span style="color:#183691;">    tmp15 = tmp1 - tmp9
</span><span style="color:#183691;">    tmp16 = 1024.0
</span><span style="color:#183691;">    tmp17 = tmp14 / tmp16
</span><span style="color:#183691;">    tmp18 = 1e-05
</span><span style="color:#183691;">    tmp19 = tmp17 + tmp18
</span><span style="color:#183691;">    tmp20 = libdevice.rsqrt(tmp19)
</span><span style="color:#183691;">    tmp21 = tmp15 * tmp20
</span><span style="color:#183691;">    tmp23 = tmp22.to(tl.float32)
</span><span style="color:#183691;">    tmp24 = tmp21 * tmp23
</span><span style="color:#183691;">    tmp26 = tmp25.to(tl.float32)
</span><span style="color:#183691;">    tmp27 = tmp24 + tmp26
</span><span style="color:#183691;">    tmp28 = tmp27.to(tl.float32)
</span><span style="color:#183691;">    tmp29 = tl.sigmoid(tmp28)
</span><span style="color:#183691;">    tmp30 = tmp0 * tmp29
</span><span style="color:#183691;">    tl.store(out_ptr2 + (r1 + (1024*x0)), tmp30, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/o6/co6gufqdkkofhhwimr2ocuvatgqmm4jphcfzmqgocn2bug33r7jv.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_1, sigmoid_1, input_4], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   input_4 =&gt; mul_5
</span><span style="font-style:italic;color:#969896;">#   normalized_1 =&gt; add_3, add_4, convert_element_type_10, convert_element_type_11, mul_3, mul_4, rsqrt_1, sub_1, var_mean_1
</span><span style="font-style:italic;color:#969896;">#   sigmoid_1 =&gt; sigmoid_1
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %add_tensor_50 : [num_users=3] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_58, %primals_8), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_10 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_50, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_1 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_10, [1]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_3 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_5, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt_1 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_3,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub_1 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_tensor_50, %getitem_6), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_3 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_1, %rsqrt_1), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_4 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_3, %primals_11), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_4 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_4, %primals_10), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_11 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_4, torch.bfloat16), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sigmoid_1 : [num_users=1] = call_function[target=torch.ops.aten.sigmoid.default](args = (%convert_element_type_11,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_5 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%add_tensor_50, %sigmoid_1), kwargs = {})
</span><span style="color:#323232;">triton_per_fused_mul_native_layer_norm_sigmoid_4 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_per_fused_mul_native_layer_norm_sigmoid_4'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.persistent_reduction(
</span><span style="color:#183691;">    size_hints=[1024, 1024],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: 'i32', 6: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_mul_native_layer_norm_sigmoid_4', 'mutated_arg_names': [], 'no_x_dim': True, 'num_load': 4, 'num_reduction': 4, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_per_fused_mul_native_layer_norm_sigmoid_4(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr2, xnumel, rnumel):
</span><span style="color:#183691;">    xnumel = 640
</span><span style="color:#183691;">    XBLOCK: tl.constexpr = 1
</span><span style="color:#183691;">    rnumel = 1024
</span><span style="color:#183691;">    RBLOCK: tl.constexpr = 1024
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = tl.full([1], xoffset, tl.int32)
</span><span style="color:#183691;">    xmask = tl.full([RBLOCK], True, tl.int1)
</span><span style="color:#183691;">    rindex = tl.arange(0, RBLOCK)[:]
</span><span style="color:#183691;">    roffset = 0
</span><span style="color:#183691;">    rmask = tl.full([RBLOCK], True, tl.int1)
</span><span style="color:#183691;">    r1 = rindex
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (r1 + (1024*x0)), None).to(tl.float32)
</span><span style="color:#183691;">    tmp1 = tl.load(in_ptr1 + (r1), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp24 = tl.load(in_ptr2 + (r1), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp27 = tl.load(in_ptr3 + (r1), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp2 = tmp0 + tmp1
</span><span style="color:#183691;">    tmp3 = tmp2.to(tl.float32)
</span><span style="color:#183691;">    tmp4 = tl.broadcast_to(tmp3, [RBLOCK])
</span><span style="color:#183691;">    tmp6 = tl.broadcast_to(tmp4, [RBLOCK])
</span><span style="color:#183691;">    tmp8 = triton_helpers.promote_to_tensor(tl.sum(tmp6, 0))
</span><span style="color:#183691;">    tmp9 = tl.full([1], 1024, tl.int32)
</span><span style="color:#183691;">    tmp10 = tmp9.to(tl.float32)
</span><span style="color:#183691;">    tmp11 = tmp8 / tmp10
</span><span style="color:#183691;">    tmp12 = tmp4 - tmp11
</span><span style="color:#183691;">    tmp13 = tmp12 * tmp12
</span><span style="color:#183691;">    tmp14 = tl.broadcast_to(tmp13, [RBLOCK])
</span><span style="color:#183691;">    tmp16 = triton_helpers.promote_to_tensor(tl.sum(tmp14, 0))
</span><span style="color:#183691;">    tmp17 = tmp3 - tmp11
</span><span style="color:#183691;">    tmp18 = 1024.0
</span><span style="color:#183691;">    tmp19 = tmp16 / tmp18
</span><span style="color:#183691;">    tmp20 = 1e-05
</span><span style="color:#183691;">    tmp21 = tmp19 + tmp20
</span><span style="color:#183691;">    tmp22 = libdevice.rsqrt(tmp21)
</span><span style="color:#183691;">    tmp23 = tmp17 * tmp22
</span><span style="color:#183691;">    tmp25 = tmp24.to(tl.float32)
</span><span style="color:#183691;">    tmp26 = tmp23 * tmp25
</span><span style="color:#183691;">    tmp28 = tmp27.to(tl.float32)
</span><span style="color:#183691;">    tmp29 = tmp26 + tmp28
</span><span style="color:#183691;">    tmp30 = tmp29.to(tl.float32)
</span><span style="color:#183691;">    tmp31 = tl.sigmoid(tmp30)
</span><span style="color:#183691;">    tmp32 = tmp2 * tmp31
</span><span style="color:#183691;">    tl.store(out_ptr2 + (r1 + (1024*x0)), tmp32, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/6y/c6ym3rxlrjq7546xnljag7cviwak44kegxsatvrcvhuszxvwbcyw.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t], Original ATen: [aten.native_layer_norm]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   t =&gt; add_5, add_6, convert_element_type_19, convert_element_type_20, mul_6, mul_7, rsqrt_2, sub_2, var_mean_2
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_19 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_5, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_2 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_19, [1]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_5 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_7, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt_2 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_5,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub_2 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_5, %getitem_8), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_6 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_2, %rsqrt_2), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_7 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_6, %primals_15), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_6 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_7, %primals_14), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_20 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_6, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_red_fused_native_layer_norm_5 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_red_fused_native_layer_norm_5'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.reduction(
</span><span style="color:#183691;">    size_hints=[1024, 262144],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: 'i32', 5: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_layer_norm_5', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_red_fused_native_layer_norm_5(in_ptr0, in_ptr1, in_ptr2, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 640
</span><span style="color:#183691;">    rnumel = 143392
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    rbase = tl.arange(0, RBLOCK)[None, :]
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp3_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp3_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp3_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp0 = tl.load(in_ptr0 + (r1 + (143392*x0)), rmask &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp1 = tmp0.to(tl.float32)
</span><span style="color:#183691;">        tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">        tmp3_mean_next, tmp3_m2_next, tmp3_weight_next = triton_helpers.welford_reduce(
</span><span style="color:#183691;">            tmp2, tmp3_mean, tmp3_m2, tmp3_weight, roffset == 0
</span><span style="color:#183691;">        )
</span><span style="color:#183691;">        tmp3_mean = tl.where(rmask &amp; xmask, tmp3_mean_next, tmp3_mean)
</span><span style="color:#183691;">        tmp3_m2 = tl.where(rmask &amp; xmask, tmp3_m2_next, tmp3_m2)
</span><span style="color:#183691;">        tmp3_weight = tl.where(rmask &amp; xmask, tmp3_weight_next, tmp3_weight)
</span><span style="color:#183691;">    tmp3_tmp, tmp4_tmp, tmp5_tmp = triton_helpers.welford(
</span><span style="color:#183691;">        tmp3_mean, tmp3_m2, tmp3_weight, 1
</span><span style="color:#183691;">    )
</span><span style="color:#183691;">    tmp3 = tmp3_tmp[:, None]
</span><span style="color:#183691;">    tmp4 = tmp4_tmp[:, None]
</span><span style="color:#183691;">    tmp5 = tmp5_tmp[:, None]
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp6 = tl.load(in_ptr0 + (r1 + (143392*x0)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp15 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp18 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp7 = tmp6.to(tl.float32)
</span><span style="color:#183691;">        tmp8 = tmp7 - tmp3
</span><span style="color:#183691;">        tmp9 = 143392.0
</span><span style="color:#183691;">        tmp10 = tmp4 / tmp9
</span><span style="color:#183691;">        tmp11 = 1e-05
</span><span style="color:#183691;">        tmp12 = tmp10 + tmp11
</span><span style="color:#183691;">        tmp13 = libdevice.rsqrt(tmp12)
</span><span style="color:#183691;">        tmp14 = tmp8 * tmp13
</span><span style="color:#183691;">        tmp16 = tmp15.to(tl.float32)
</span><span style="color:#183691;">        tmp17 = tmp14 * tmp16
</span><span style="color:#183691;">        tmp19 = tmp18.to(tl.float32)
</span><span style="color:#183691;">        tmp20 = tmp17 + tmp19
</span><span style="color:#183691;">        tmp21 = tmp20.to(tl.float32)
</span><span style="color:#183691;">        tl.store(out_ptr2 + (r1 + (143424*x0)), tmp21, rmask &amp; xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/nu/cnupeu3fd3zyu6eqhhmokcoacm77aazftyvuacixo326ojlpfuqs.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_2], Original ATen: [aten.native_layer_norm]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   normalized_2 =&gt; convert_element_type_24, var_mean_3
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_24 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%addmm_3, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_3 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_24, [1]), kwargs = {correction: 0, keepdim: True})
</span><span style="color:#323232;">triton_red_fused_native_layer_norm_6 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_red_fused_native_layer_norm_6'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.reduction(
</span><span style="color:#183691;">    size_hints=[1024, 8192],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*fp32', 2: '*fp32', 3: 'i32', 4: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_layer_norm_6', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 2, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_red_fused_native_layer_norm_6(in_ptr0, out_ptr0, out_ptr1, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 640
</span><span style="color:#183691;">    rnumel = 4800
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    rbase = tl.arange(0, RBLOCK)[None, :]
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp3_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp3_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp3_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp0 = tl.load(in_ptr0 + (r1 + (4800*x0)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp1 = tmp0.to(tl.float32)
</span><span style="color:#183691;">        tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">        tmp3_mean_next, tmp3_m2_next, tmp3_weight_next = triton_helpers.welford_reduce(
</span><span style="color:#183691;">            tmp2, tmp3_mean, tmp3_m2, tmp3_weight, roffset == 0
</span><span style="color:#183691;">        )
</span><span style="color:#183691;">        tmp3_mean = tl.where(rmask &amp; xmask, tmp3_mean_next, tmp3_mean)
</span><span style="color:#183691;">        tmp3_m2 = tl.where(rmask &amp; xmask, tmp3_m2_next, tmp3_m2)
</span><span style="color:#183691;">        tmp3_weight = tl.where(rmask &amp; xmask, tmp3_weight_next, tmp3_weight)
</span><span style="color:#183691;">    tmp3_tmp, tmp4_tmp, tmp5_tmp = triton_helpers.welford(
</span><span style="color:#183691;">        tmp3_mean, tmp3_m2, tmp3_weight, 1
</span><span style="color:#183691;">    )
</span><span style="color:#183691;">    tmp3 = tmp3_tmp[:, None]
</span><span style="color:#183691;">    tmp4 = tmp4_tmp[:, None]
</span><span style="color:#183691;">    tmp5 = tmp5_tmp[:, None]
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x0), tmp3, xmask)
</span><span style="color:#183691;">    tl.store(out_ptr1 + (x0), tmp4, xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/hd/chdssduigtxj3et333rl4oiq3xxt7obyl6dndhjnfo6ekubgxrya.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [temp_overarch_input, overarch_input], Original ATen: [aten.cat, aten.native_layer_norm]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   overarch_input =&gt; add_10, add_9, convert_element_type_26, convert_element_type_27, mul_11, mul_12, rsqrt_4, sub_4, var_mean_4
</span><span style="font-style:italic;color:#969896;">#   temp_overarch_input =&gt; cat
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %cat : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_20, %primals_21, %mul_10], 1), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_26 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%cat, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_4 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_26, [1]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_9 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_11, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt_4 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_9,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub_4 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%cat, %getitem_12), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_11 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_4, %rsqrt_4), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_12 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_11, %primals_23), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_10 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_12, %primals_22), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_27 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_10, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_red_fused_cat_native_layer_norm_7 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_red_fused_cat_native_layer_norm_7'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.reduction(
</span><span style="color:#183691;">    size_hints=[1024, 16384],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*fp32', 4: '*fp32', 5: '*bf16', 6: '*bf16', 7: '*bf16', 8: '*bf16', 9: '*bf16', 10: '*bf16', 11: 'i32', 12: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_cat_native_layer_norm_7', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 10, 'num_reduction': 2, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_red_fused_cat_native_layer_norm_7(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, in_ptr6, in_ptr7, in_ptr8, out_ptr0, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 640
</span><span style="color:#183691;">    rnumel = 8384
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    rbase = tl.arange(0, RBLOCK)[None, :]
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp40_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp40_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp40_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp0 = r1
</span><span style="color:#183691;">        tmp1 = tl.full([1, 1], 0, tl.int64)
</span><span style="color:#183691;">        tmp2 = tmp0 &gt;= tmp1
</span><span style="color:#183691;">        tmp3 = tl.full([1, 1], 1536, tl.int64)
</span><span style="color:#183691;">        tmp4 = tmp0 &lt; tmp3
</span><span style="color:#183691;">        tmp5 = tl.load(in_ptr0 + ((1536*x0) + r1), rmask &amp; tmp4 &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp6 = tmp0 &gt;= tmp3
</span><span style="color:#183691;">        tmp7 = tl.full([1, 1], 3584, tl.int64)
</span><span style="color:#183691;">        tmp8 = tmp0 &lt; tmp7
</span><span style="color:#183691;">        tmp9 = tmp6 &amp; tmp8
</span><span style="color:#183691;">        tmp10 = tl.load(in_ptr1 + ((2048*x0) + ((-1536) + r1)), rmask &amp; tmp9 &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp11 = tmp0 &gt;= tmp7
</span><span style="color:#183691;">        tmp12 = tl.full([1, 1], 8384, tl.int64)
</span><span style="color:#183691;">        tmp13 = tmp0 &lt; tmp12
</span><span style="color:#183691;">        tmp14 = tl.load(in_ptr2 + ((4800*x0) + ((-3584) + r1)), rmask &amp; tmp11 &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp15 = tmp14.to(tl.float32)
</span><span style="color:#183691;">        tmp16 = tl.load(in_ptr3 + (tl.broadcast_to(x0, [XBLOCK, RBLOCK])), rmask &amp; tmp11 &amp; xmask, eviction_policy='evict_last', other=0.0)
</span><span style="color:#183691;">        tmp17 = tmp15 - tmp16
</span><span style="color:#183691;">        tmp18 = tl.load(in_ptr4 + (tl.broadcast_to(x0, [XBLOCK, RBLOCK])), rmask &amp; tmp11 &amp; xmask, eviction_policy='evict_last', other=0.0)
</span><span style="color:#183691;">        tmp19 = 4800.0
</span><span style="color:#183691;">        tmp20 = tmp18 / tmp19
</span><span style="color:#183691;">        tmp21 = 1e-05
</span><span style="color:#183691;">        tmp22 = tmp20 + tmp21
</span><span style="color:#183691;">        tmp23 = libdevice.rsqrt(tmp22)
</span><span style="color:#183691;">        tmp24 = tmp17 * tmp23
</span><span style="color:#183691;">        tmp25 = tl.load(in_ptr5 + (tl.broadcast_to((-3584) + r1, [XBLOCK, RBLOCK])), rmask &amp; tmp11 &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp26 = tmp25.to(tl.float32)
</span><span style="color:#183691;">        tmp27 = tmp24 * tmp26
</span><span style="color:#183691;">        tmp28 = tl.load(in_ptr6 + (tl.broadcast_to((-3584) + r1, [XBLOCK, RBLOCK])), rmask &amp; tmp11 &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp29 = tmp28.to(tl.float32)
</span><span style="color:#183691;">        tmp30 = tmp27 + tmp29
</span><span style="color:#183691;">        tmp31 = tmp30.to(tl.float32)
</span><span style="color:#183691;">        tmp32 = tl.sigmoid(tmp31)
</span><span style="color:#183691;">        tmp33 = tmp14 * tmp32
</span><span style="color:#183691;">        tmp34 = tl.full(tmp33.shape, 0.0, tmp33.dtype)
</span><span style="color:#183691;">        tmp35 = tl.where(tmp11, tmp33, tmp34)
</span><span style="color:#183691;">        tmp36 = tl.where(tmp9, tmp10, tmp35)
</span><span style="color:#183691;">        tmp37 = tl.where(tmp4, tmp5, tmp36)
</span><span style="color:#183691;">        tmp38 = tmp37.to(tl.float32)
</span><span style="color:#183691;">        tmp39 = tl.broadcast_to(tmp38, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">        tmp40_mean_next, tmp40_m2_next, tmp40_weight_next = triton_helpers.welford_reduce(
</span><span style="color:#183691;">            tmp39, tmp40_mean, tmp40_m2, tmp40_weight, roffset == 0
</span><span style="color:#183691;">        )
</span><span style="color:#183691;">        tmp40_mean = tl.where(rmask &amp; xmask, tmp40_mean_next, tmp40_mean)
</span><span style="color:#183691;">        tmp40_m2 = tl.where(rmask &amp; xmask, tmp40_m2_next, tmp40_m2)
</span><span style="color:#183691;">        tmp40_weight = tl.where(rmask &amp; xmask, tmp40_weight_next, tmp40_weight)
</span><span style="color:#183691;">        tl.store(out_ptr0 + (r1 + (8384*x0)), tmp37, rmask &amp; xmask)
</span><span style="color:#183691;">    tmp40_tmp, tmp41_tmp, tmp42_tmp = triton_helpers.welford(
</span><span style="color:#183691;">        tmp40_mean, tmp40_m2, tmp40_weight, 1
</span><span style="color:#183691;">    )
</span><span style="color:#183691;">    tmp40 = tmp40_tmp[:, None]
</span><span style="color:#183691;">    tmp41 = tmp41_tmp[:, None]
</span><span style="color:#183691;">    tmp42 = tmp42_tmp[:, None]
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp43 = tl.load(out_ptr0 + (r1 + (8384*x0)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp52 = tl.load(in_ptr7 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp55 = tl.load(in_ptr8 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp44 = tmp43.to(tl.float32)
</span><span style="color:#183691;">        tmp45 = tmp44 - tmp40
</span><span style="color:#183691;">        tmp46 = 8384.0
</span><span style="color:#183691;">        tmp47 = tmp41 / tmp46
</span><span style="color:#183691;">        tmp48 = 1e-05
</span><span style="color:#183691;">        tmp49 = tmp47 + tmp48
</span><span style="color:#183691;">        tmp50 = libdevice.rsqrt(tmp49)
</span><span style="color:#183691;">        tmp51 = tmp45 * tmp50
</span><span style="color:#183691;">        tmp53 = tmp52.to(tl.float32)
</span><span style="color:#183691;">        tmp54 = tmp51 * tmp53
</span><span style="color:#183691;">        tmp56 = tmp55.to(tl.float32)
</span><span style="color:#183691;">        tmp57 = tmp54 + tmp56
</span><span style="color:#183691;">        tmp58 = tmp57.to(tl.float32)
</span><span style="color:#183691;">        tl.store(out_ptr3 + (r1 + (8384*x0)), tmp58, rmask &amp; xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/vy/cvyhx7fm6nnwtvhmw7alj3dpop3hfsjqcppq7hqjp2tg7exnzwpk.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor], Original ATen: [aten.addcmul]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   interacted_tensor =&gt; add_11, convert_element_type_34, convert_element_type_36, convert_element_type_37, mul_13, mul_14
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %add_tensor_49 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_57, %primals_26), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_34 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%convert_element_type_27, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_36 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_49, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_13 : [num_users=16] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_34, 1.0), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_14 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %convert_element_type_36), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_11 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_34, %mul_14), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_37 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_11, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_addcmul_8 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_addcmul_8'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[8388608], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addcmul_8', 'mutated_arg_names': ['in_out_ptr0'], 'no_x_dim': False, 'num_load': 3, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_addcmul_8(in_out_ptr0, in_ptr0, in_ptr1, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 5365760
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = tl.full([XBLOCK], True, tl.int1)
</span><span style="color:#183691;">    x2 = xindex
</span><span style="color:#183691;">    x0 = xindex % 8384
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (x2), None).to(tl.float32)
</span><span style="color:#183691;">    tmp4 = tl.load(in_out_ptr0 + (x2), None).to(tl.float32)
</span><span style="color:#183691;">    tmp5 = tl.load(in_ptr1 + (x0), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp1 = tmp0.to(tl.float32)
</span><span style="color:#183691;">    tmp2 = 1.0
</span><span style="color:#183691;">    tmp3 = tmp1 * tmp2
</span><span style="color:#183691;">    tmp6 = tmp4 + tmp5
</span><span style="color:#183691;">    tmp7 = tmp6.to(tl.float32)
</span><span style="color:#183691;">    tmp8 = tmp3 * tmp7
</span><span style="color:#183691;">    tmp9 = tmp1 + tmp8
</span><span style="color:#183691;">    tmp10 = tmp9.to(tl.float32)
</span><span style="color:#183691;">    tl.store(in_out_ptr0 + (x2), tmp10, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/oe/coetwslqxts5ehwtzthg4ljprzkeuezz4ctjza7vzo65oduxy2aj.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_1], Original ATen: [aten.addcmul]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   interacted_tensor =&gt; convert_element_type_34, mul_13
</span><span style="font-style:italic;color:#969896;">#   interacted_tensor_1 =&gt; add_12, convert_element_type_44, convert_element_type_46, convert_element_type_47, mul_16
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_34 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%convert_element_type_27, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_13 : [num_users=16] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_34, 1.0), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_tensor_48 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_56, %primals_30), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_44 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%convert_element_type_37, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_46 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_48, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_16 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %convert_element_type_46), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_12 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_44, %mul_16), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_47 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_12, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_addcmul_9 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_addcmul_9'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[8388608], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_addcmul_9', 'mutated_arg_names': ['in_out_ptr0'], 'no_x_dim': False, 'num_load': 4, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_addcmul_9(in_out_ptr0, in_ptr0, in_ptr1, in_ptr2, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 5365760
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = tl.full([XBLOCK], True, tl.int1)
</span><span style="color:#183691;">    x2 = xindex
</span><span style="color:#183691;">    x0 = xindex % 8384
</span><span style="color:#183691;">    tmp0 = tl.load(in_out_ptr0 + (x2), None).to(tl.float32)
</span><span style="color:#183691;">    tmp2 = tl.load(in_ptr0 + (x2), None).to(tl.float32)
</span><span style="color:#183691;">    tmp6 = tl.load(in_ptr1 + (x2), None).to(tl.float32)
</span><span style="color:#183691;">    tmp7 = tl.load(in_ptr2 + (x0), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp1 = tmp0.to(tl.float32)
</span><span style="color:#183691;">    tmp3 = tmp2.to(tl.float32)
</span><span style="color:#183691;">    tmp4 = 1.0
</span><span style="color:#183691;">    tmp5 = tmp3 * tmp4
</span><span style="color:#183691;">    tmp8 = tmp6 + tmp7
</span><span style="color:#183691;">    tmp9 = tmp8.to(tl.float32)
</span><span style="color:#183691;">    tmp10 = tmp5 * tmp9
</span><span style="color:#183691;">    tmp11 = tmp1 + tmp10
</span><span style="color:#183691;">    tmp12 = tmp11.to(tl.float32)
</span><span style="color:#183691;">    tl.store(in_out_ptr0 + (x2), tmp12, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/6s/c6s4ilxkfdt5quoosmx7het3dwatifyaoarwbg5ubdp4i2q3ddsm.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_15, snn_output], Original ATen: [aten.addcmul, aten.native_layer_norm]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   interacted_tensor =&gt; convert_element_type_34, mul_13
</span><span style="font-style:italic;color:#969896;">#   interacted_tensor_15 =&gt; add_26, convert_element_type_184, convert_element_type_186, convert_element_type_187, mul_44
</span><span style="font-style:italic;color:#969896;">#   snn_output =&gt; add_27, add_28, convert_element_type_188, convert_element_type_189, mul_45, mul_46, rsqrt_5, sub_5, var_mean_5
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_34 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%convert_element_type_27, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_13 : [num_users=16] = call_function[target=torch.ops.aten.mul.Tensor](args = (%convert_element_type_34, 1.0), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_tensor_34 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mm_default_42, %primals_86), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_184 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%convert_element_type_177, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_186 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_tensor_34, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_44 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_13, %convert_element_type_186), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_26 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%convert_element_type_184, %mul_44), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_187 : [num_users=2] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_26, torch.bfloat16), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_188 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%convert_element_type_187, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_5 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_188, [1]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_27 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_13, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt_5 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_27,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub_5 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%convert_element_type_187, %getitem_14), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_45 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_5, %rsqrt_5), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_46 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_45, %primals_89), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_28 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_46, %primals_88), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_189 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_28, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_red_fused_addcmul_native_layer_norm_10 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_red_fused_addcmul_native_layer_norm_10'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.reduction(
</span><span style="color:#183691;">    size_hints=[1024, 16384],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: '*bf16', 6: '*bf16', 7: 'i32', 8: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6, 7, 8), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_addcmul_native_layer_norm_10', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 10, 'num_reduction': 2, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_red_fused_addcmul_native_layer_norm_10(in_ptr0, in_ptr1, in_ptr2, in_ptr3, in_ptr4, in_ptr5, out_ptr3, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 640
</span><span style="color:#183691;">    rnumel = 8384
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    rbase = tl.arange(0, RBLOCK)[None, :]
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp15_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp15_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp15_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp0 = tl.load(in_ptr0 + (r1 + (8384*x0)), rmask &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp2 = tl.load(in_ptr1 + (r1 + (8384*x0)), rmask &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp6 = tl.load(in_ptr2 + (r1 + (8384*x0)), rmask &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp7 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp1 = tmp0.to(tl.float32)
</span><span style="color:#183691;">        tmp3 = tmp2.to(tl.float32)
</span><span style="color:#183691;">        tmp4 = 1.0
</span><span style="color:#183691;">        tmp5 = tmp3 * tmp4
</span><span style="color:#183691;">        tmp8 = tmp6 + tmp7
</span><span style="color:#183691;">        tmp9 = tmp8.to(tl.float32)
</span><span style="color:#183691;">        tmp10 = tmp5 * tmp9
</span><span style="color:#183691;">        tmp11 = tmp1 + tmp10
</span><span style="color:#183691;">        tmp12 = tmp11.to(tl.float32)
</span><span style="color:#183691;">        tmp13 = tmp12.to(tl.float32)
</span><span style="color:#183691;">        tmp14 = tl.broadcast_to(tmp13, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">        tmp15_mean_next, tmp15_m2_next, tmp15_weight_next = triton_helpers.welford_reduce(
</span><span style="color:#183691;">            tmp14, tmp15_mean, tmp15_m2, tmp15_weight, roffset == 0
</span><span style="color:#183691;">        )
</span><span style="color:#183691;">        tmp15_mean = tl.where(rmask &amp; xmask, tmp15_mean_next, tmp15_mean)
</span><span style="color:#183691;">        tmp15_m2 = tl.where(rmask &amp; xmask, tmp15_m2_next, tmp15_m2)
</span><span style="color:#183691;">        tmp15_weight = tl.where(rmask &amp; xmask, tmp15_weight_next, tmp15_weight)
</span><span style="color:#183691;">    tmp15_tmp, tmp16_tmp, tmp17_tmp = triton_helpers.welford(
</span><span style="color:#183691;">        tmp15_mean, tmp15_m2, tmp15_weight, 1
</span><span style="color:#183691;">    )
</span><span style="color:#183691;">    tmp15 = tmp15_tmp[:, None]
</span><span style="color:#183691;">    tmp16 = tmp16_tmp[:, None]
</span><span style="color:#183691;">    tmp17 = tmp17_tmp[:, None]
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp18 = tl.load(in_ptr0 + (r1 + (8384*x0)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp20 = tl.load(in_ptr1 + (r1 + (8384*x0)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp24 = tl.load(in_ptr2 + (r1 + (8384*x0)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp25 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp39 = tl.load(in_ptr4 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp42 = tl.load(in_ptr5 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp19 = tmp18.to(tl.float32)
</span><span style="color:#183691;">        tmp21 = tmp20.to(tl.float32)
</span><span style="color:#183691;">        tmp22 = 1.0
</span><span style="color:#183691;">        tmp23 = tmp21 * tmp22
</span><span style="color:#183691;">        tmp26 = tmp24 + tmp25
</span><span style="color:#183691;">        tmp27 = tmp26.to(tl.float32)
</span><span style="color:#183691;">        tmp28 = tmp23 * tmp27
</span><span style="color:#183691;">        tmp29 = tmp19 + tmp28
</span><span style="color:#183691;">        tmp30 = tmp29.to(tl.float32)
</span><span style="color:#183691;">        tmp31 = tmp30.to(tl.float32)
</span><span style="color:#183691;">        tmp32 = tmp31 - tmp15
</span><span style="color:#183691;">        tmp33 = 8384.0
</span><span style="color:#183691;">        tmp34 = tmp16 / tmp33
</span><span style="color:#183691;">        tmp35 = 1e-05
</span><span style="color:#183691;">        tmp36 = tmp34 + tmp35
</span><span style="color:#183691;">        tmp37 = libdevice.rsqrt(tmp36)
</span><span style="color:#183691;">        tmp38 = tmp32 * tmp37
</span><span style="color:#183691;">        tmp40 = tmp39.to(tl.float32)
</span><span style="color:#183691;">        tmp41 = tmp38 * tmp40
</span><span style="color:#183691;">        tmp43 = tmp42.to(tl.float32)
</span><span style="color:#183691;">        tmp44 = tmp41 + tmp43
</span><span style="color:#183691;">        tmp45 = tmp44.to(tl.float32)
</span><span style="color:#183691;">        tl.store(out_ptr3 + (r1 + (8384*x0)), tmp45, rmask &amp; xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/ve/cveoo3r35keyr2erz4fofaopwgbdbvyzivtwn44cp7hssbauud2c.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   cat_1 =&gt; cat_1
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_92, %view_2, %addmm_36], 1), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_cat_11 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_cat_11'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[131072], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_11', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_cat_11(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 122880
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = tl.full([XBLOCK], True, tl.int1)
</span><span style="color:#183691;">    x2 = xindex
</span><span style="color:#183691;">    x0 = xindex % 192
</span><span style="color:#183691;">    x1 = (xindex // 192)
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (x2), None).to(tl.float32)
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x0 + (73920*x1)), tmp0, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/n4/cn4ancyanwnyup63gib6d2lvkogzpxj4wtg7bkyjuwc36zjdnxnl.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   cat_1 =&gt; cat_1
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %cat_1 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_92, %view_2, %addmm_36], 1), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_cat_12 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_cat_12'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[16777216], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_12', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_cat_12(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 15728640
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = tl.full([XBLOCK], True, tl.int1)
</span><span style="color:#183691;">    x0 = xindex % 24576
</span><span style="color:#183691;">    x1 = (xindex // 24576)
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (x0 + (147648*x1)), None).to(tl.float32)
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x0 + (73920*x1)), tmp0, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/qc/cqcjblwtbs77k6hu72tybpopwre3kraj7asyxpciwsjekoiqpv4j.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [emb_residual_sum, dhen_layer_output], Original ATen: [aten.add, aten.native_layer_norm]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   dhen_layer_output =&gt; add_30, add_31, convert_element_type_193, convert_element_type_194, mul_47, mul_48, rsqrt_6, sub_6, var_mean_6
</span><span style="font-style:italic;color:#969896;">#   emb_residual_sum =&gt; add_29
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %add_29 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_2, %view_6), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_193 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_29, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_6 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_193, [2]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_30 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_15, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt_6 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_30,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub_6 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_29, %getitem_16), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_47 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_6, %rsqrt_6), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_48 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_47, %primals_94), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_31 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_48, %primals_93), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_194 : [num_users=3] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_31, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_red_fused_add_native_layer_norm_13 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_red_fused_add_native_layer_norm_13'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.reduction(
</span><span style="color:#183691;">    size_hints=[262144, 256],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.DEFAULT,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: 'i32', 6: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_add_native_layer_norm_13', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 6, 'num_reduction': 2, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_red_fused_add_native_layer_norm_13(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 246400
</span><span style="color:#183691;">    rnumel = 192
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    rbase = tl.arange(0, RBLOCK)[None, :]
</span><span style="color:#183691;">    x0 = xindex % 385
</span><span style="color:#183691;">    x1 = (xindex // 385)
</span><span style="color:#183691;">    x3 = xindex
</span><span style="color:#183691;">    tmp5_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp5_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp5_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r2 = rindex
</span><span style="color:#183691;">        tmp0 = tl.load(in_ptr0 + (73728 + r2 + (192*x0) + (147648*x1)), rmask &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp1 = tl.load(in_ptr1 + (r2 + (192*x3)), rmask &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp2 = tmp0 + tmp1
</span><span style="color:#183691;">        tmp3 = tmp2.to(tl.float32)
</span><span style="color:#183691;">        tmp4 = tl.broadcast_to(tmp3, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">        tmp5_mean_next, tmp5_m2_next, tmp5_weight_next = triton_helpers.welford_reduce(
</span><span style="color:#183691;">            tmp4, tmp5_mean, tmp5_m2, tmp5_weight, roffset == 0
</span><span style="color:#183691;">        )
</span><span style="color:#183691;">        tmp5_mean = tl.where(rmask &amp; xmask, tmp5_mean_next, tmp5_mean)
</span><span style="color:#183691;">        tmp5_m2 = tl.where(rmask &amp; xmask, tmp5_m2_next, tmp5_m2)
</span><span style="color:#183691;">        tmp5_weight = tl.where(rmask &amp; xmask, tmp5_weight_next, tmp5_weight)
</span><span style="color:#183691;">    tmp5_tmp, tmp6_tmp, tmp7_tmp = triton_helpers.welford(
</span><span style="color:#183691;">        tmp5_mean, tmp5_m2, tmp5_weight, 1
</span><span style="color:#183691;">    )
</span><span style="color:#183691;">    tmp5 = tmp5_tmp[:, None]
</span><span style="color:#183691;">    tmp6 = tmp6_tmp[:, None]
</span><span style="color:#183691;">    tmp7 = tmp7_tmp[:, None]
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r2 = rindex
</span><span style="color:#183691;">        tmp8 = tl.load(in_ptr0 + (73728 + r2 + (192*x0) + (147648*x1)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp9 = tl.load(in_ptr1 + (r2 + (192*x3)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp19 = tl.load(in_ptr2 + (r2), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp22 = tl.load(in_ptr3 + (r2), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp10 = tmp8 + tmp9
</span><span style="color:#183691;">        tmp11 = tmp10.to(tl.float32)
</span><span style="color:#183691;">        tmp12 = tmp11 - tmp5
</span><span style="color:#183691;">        tmp13 = 192.0
</span><span style="color:#183691;">        tmp14 = tmp6 / tmp13
</span><span style="color:#183691;">        tmp15 = 1e-05
</span><span style="color:#183691;">        tmp16 = tmp14 + tmp15
</span><span style="color:#183691;">        tmp17 = libdevice.rsqrt(tmp16)
</span><span style="color:#183691;">        tmp18 = tmp12 * tmp17
</span><span style="color:#183691;">        tmp20 = tmp19.to(tl.float32)
</span><span style="color:#183691;">        tmp21 = tmp18 * tmp20
</span><span style="color:#183691;">        tmp23 = tmp22.to(tl.float32)
</span><span style="color:#183691;">        tmp24 = tmp21 + tmp23
</span><span style="color:#183691;">        tmp25 = tmp24.to(tl.float32)
</span><span style="color:#183691;">        tl.store(out_ptr2 + (r2 + (192*x3)), tmp25, rmask &amp; xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/iu/ciu735d5xhgrypmstmwhgf3xa6jlaka7b5vvmtuvttbpbxqgfgb2.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %cat_default_11 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%view_7, %full_default_13], 1), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_14 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_14'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[67108864], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_14', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_14(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 48168960
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = tl.full([XBLOCK], True, tl.int1)
</span><span style="color:#183691;">    x0 = xindex % 392
</span><span style="color:#183691;">    x1 = (xindex // 392)
</span><span style="color:#183691;">    x2 = xindex
</span><span style="color:#183691;">    tmp0 = x0
</span><span style="color:#183691;">    tmp1 = tl.full([1], 0, tl.int64)
</span><span style="color:#183691;">    tmp2 = tmp0 &gt;= tmp1
</span><span style="color:#183691;">    tmp3 = tl.full([1], 385, tl.int64)
</span><span style="color:#183691;">    tmp4 = tmp0 &lt; tmp3
</span><span style="color:#183691;">    tmp5 = tl.load(in_ptr0 + ((192*x0) + (73920*(x1 // 192)) + (x1 % 192)), tmp4, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tmp6 = tmp0 &gt;= tmp3
</span><span style="color:#183691;">    tmp7 = tl.full([1], 392, tl.int64)
</span><span style="color:#183691;">    tmp8 = tmp0 &lt; tmp7
</span><span style="color:#183691;">    tmp9 = 0.0
</span><span style="color:#183691;">    tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
</span><span style="color:#183691;">    tmp11 = tl.where(tmp6, tmp9, tmp10)
</span><span style="color:#183691;">    tmp12 = tl.where(tmp4, tmp5, tmp11)
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x2), tmp12, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/4t/c4tr5yu7qp3uffnqeohpbdv2i7ecjum64b64jktdngngsx76u5vl.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %cat_default_12 : [num_users=1] = call_function[target=torch.ops.aten.cat.default](args = ([%permute_42, %full_default_12],), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_15 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_15'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[262144], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_15', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_15(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 150528
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    x1 = (xindex // 384)
</span><span style="color:#183691;">    x0 = xindex % 384
</span><span style="color:#183691;">    x2 = xindex
</span><span style="color:#183691;">    tmp0 = x1
</span><span style="color:#183691;">    tmp1 = tl.full([1], 0, tl.int64)
</span><span style="color:#183691;">    tmp2 = tmp0 &gt;= tmp1
</span><span style="color:#183691;">    tmp3 = tl.full([1], 385, tl.int64)
</span><span style="color:#183691;">    tmp4 = tmp0 &lt; tmp3
</span><span style="color:#183691;">    tmp5 = tl.load(in_ptr0 + ((385*x0) + x1), tmp4 &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tmp6 = tmp0 &gt;= tmp3
</span><span style="color:#183691;">    tmp7 = tl.full([1], 392, tl.int64)
</span><span style="color:#183691;">    tmp8 = tmp0 &lt; tmp7
</span><span style="color:#183691;">    tmp9 = 0.0
</span><span style="color:#183691;">    tmp10 = tl.full(tmp9.shape, 0.0, tmp9.dtype)
</span><span style="color:#183691;">    tmp11 = tl.where(tmp6, tmp9, tmp10)
</span><span style="color:#183691;">    tmp12 = tl.where(tmp4, tmp5, tmp11)
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x2), tmp12, xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/k3/ck3ykqosfqua5tlhbbx5ucvoms2tvxsqcswc6gdcpos47hifipk5.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [matmul_1, out_1], Original ATen: [aten.clone, aten.add]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   matmul_1 =&gt; clone_3
</span><span style="font-style:italic;color:#969896;">#   out_1 =&gt; add_32
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %clone_3 : [num_users=1] = call_function[target=torch.ops.aten.clone.default](args = (%permute_43,), kwargs = {memory_format: torch.contiguous_format})
</span><span style="font-style:italic;color:#969896;">#   %add_32 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%clone_3, %primals_96), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_add_clone_16 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_add_clone_16'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[262144, 256], tile_hint=TileHint.DEFAULT,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: 'i32', 4: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_add_clone_16', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 2, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_add_clone_16(in_ptr0, in_ptr1, out_ptr0, ynumel, xnumel, YBLOCK : tl.constexpr, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    ynumel = 245760
</span><span style="color:#183691;">    xnumel = 192
</span><span style="color:#183691;">    yoffset = (tl.program_id(1) + tl.program_id(2) * tl.num_programs(1)) * YBLOCK
</span><span style="color:#183691;">    yindex = yoffset + tl.arange(0, YBLOCK)[None, :]
</span><span style="color:#183691;">    ymask = tl.full([XBLOCK, YBLOCK], True, tl.int1)
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    x2 = xindex
</span><span style="color:#183691;">    y0 = yindex % 384
</span><span style="color:#183691;">    y1 = (yindex // 384)
</span><span style="color:#183691;">    y3 = yindex
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (y0 + (384*x2) + (73728*y1)), xmask, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp1 = tl.load(in_ptr1 + (y0), None, eviction_policy='evict_last').to(tl.float32)
</span><span style="color:#183691;">    tmp2 = tmp0 + tmp1
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x2 + (192*y3)), tmp2, xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/ya/cyaepost675xjyzklzaawtnglj7vher3uvpcawihcsscbvwz2t2z.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t_1], Original ATen: [aten.native_layer_norm]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   t_1 =&gt; add_37, add_38, convert_element_type_214, convert_element_type_215, mul_55, mul_56, rsqrt_9, sub_9, var_mean_9
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_214 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%view_12, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_9 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_214, [1]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_37 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_23, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt_9 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_37,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub_9 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%view_12, %getitem_24), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_55 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_9, %rsqrt_9), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_56 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_55, %primals_108), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_38 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_56, %primals_107), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_215 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_38, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_red_fused_native_layer_norm_17 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_red_fused_native_layer_norm_17'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.reduction(
</span><span style="color:#183691;">    size_hints=[1024, 16384],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: 'i32', 5: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_red_fused_native_layer_norm_17', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 4, 'num_reduction': 2, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_red_fused_native_layer_norm_17(in_ptr0, in_ptr1, in_ptr2, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr, RBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 640
</span><span style="color:#183691;">    rnumel = 12320
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    rbase = tl.arange(0, RBLOCK)[None, :]
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp3_mean = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp3_m2 = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    tmp3_weight = tl.zeros([XBLOCK, RBLOCK], tl.float32)
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp0 = tl.load(in_ptr0 + (r1 + (12320*x0)), rmask &amp; xmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp1 = tmp0.to(tl.float32)
</span><span style="color:#183691;">        tmp2 = tl.broadcast_to(tmp1, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">        tmp3_mean_next, tmp3_m2_next, tmp3_weight_next = triton_helpers.welford_reduce(
</span><span style="color:#183691;">            tmp2, tmp3_mean, tmp3_m2, tmp3_weight, roffset == 0
</span><span style="color:#183691;">        )
</span><span style="color:#183691;">        tmp3_mean = tl.where(rmask &amp; xmask, tmp3_mean_next, tmp3_mean)
</span><span style="color:#183691;">        tmp3_m2 = tl.where(rmask &amp; xmask, tmp3_m2_next, tmp3_m2)
</span><span style="color:#183691;">        tmp3_weight = tl.where(rmask &amp; xmask, tmp3_weight_next, tmp3_weight)
</span><span style="color:#183691;">    tmp3_tmp, tmp4_tmp, tmp5_tmp = triton_helpers.welford(
</span><span style="color:#183691;">        tmp3_mean, tmp3_m2, tmp3_weight, 1
</span><span style="color:#183691;">    )
</span><span style="color:#183691;">    tmp3 = tmp3_tmp[:, None]
</span><span style="color:#183691;">    tmp4 = tmp4_tmp[:, None]
</span><span style="color:#183691;">    tmp5 = tmp5_tmp[:, None]
</span><span style="color:#183691;">    for roffset in range(0, rnumel, RBLOCK):
</span><span style="color:#183691;">        rindex = roffset + rbase
</span><span style="color:#183691;">        rmask = rindex &lt; rnumel
</span><span style="color:#183691;">        r1 = rindex
</span><span style="color:#183691;">        tmp6 = tl.load(in_ptr0 + (r1 + (12320*x0)), rmask &amp; xmask, eviction_policy='evict_first', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp15 = tl.load(in_ptr1 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp18 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">        tmp7 = tmp6.to(tl.float32)
</span><span style="color:#183691;">        tmp8 = tmp7 - tmp3
</span><span style="color:#183691;">        tmp9 = 12320.0
</span><span style="color:#183691;">        tmp10 = tmp4 / tmp9
</span><span style="color:#183691;">        tmp11 = 1e-05
</span><span style="color:#183691;">        tmp12 = tmp10 + tmp11
</span><span style="color:#183691;">        tmp13 = libdevice.rsqrt(tmp12)
</span><span style="color:#183691;">        tmp14 = tmp8 * tmp13
</span><span style="color:#183691;">        tmp16 = tmp15.to(tl.float32)
</span><span style="color:#183691;">        tmp17 = tmp14 * tmp16
</span><span style="color:#183691;">        tmp19 = tmp18.to(tl.float32)
</span><span style="color:#183691;">        tmp20 = tmp17 + tmp19
</span><span style="color:#183691;">        tmp21 = tmp20.to(tl.float32)
</span><span style="color:#183691;">        tl.store(out_ptr2 + (r1 + (12352*x0)), tmp21, rmask &amp; xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/5u/c5up7hd7qai7unaeyxrivcpccy6huoa5d6d365b6euw6bxf2yk5o.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_3], Original ATen: [aten.cat]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   cat_3 =&gt; cat_3
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %cat_3 : [num_users=2] = call_function[target=torch.ops.aten.cat.default](args = ([%primals_92, %view_9, %addmm_73], 1), kwargs = {})
</span><span style="color:#323232;">triton_poi_fused_cat_18 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_poi_fused_cat_18'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.pointwise(
</span><span style="color:#183691;">    size_hints=[16777216], 
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_poi_fused_cat_18', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 1, 'num_reduction': 0, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True},
</span><span style="color:#183691;">    min_elem_per_thread=0
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_poi_fused_cat_18(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 15728640
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:]
</span><span style="color:#183691;">    xmask = tl.full([XBLOCK], True, tl.int1)
</span><span style="color:#183691;">    x0 = xindex % 24576
</span><span style="color:#183691;">    x1 = (xindex // 24576)
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (x0 + (73728*x1)), None).to(tl.float32)
</span><span style="color:#183691;">    tl.store(out_ptr0 + (x0 + (73920*x1)), tmp0, None)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-style:italic;color:#969896;"># kernel path: /tmp/torchinductor_nobody/sl/csl4n4om5g6kbbrywxr3qnovmkm7udim5gmsh7q5olsi6jkzp3wr.py
</span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [emb_residual_sum_1, dhen_layer_output_1], Original ATen: [aten.add, aten.native_layer_norm]
</span><span style="font-style:italic;color:#969896;"># Source node to ATen node mapping:
</span><span style="font-style:italic;color:#969896;">#   dhen_layer_output_1 =&gt; add_62, add_63, convert_element_type_388, convert_element_type_389, mul_96, mul_97, rsqrt_13, sub_13, var_mean_13
</span><span style="font-style:italic;color:#969896;">#   emb_residual_sum_1 =&gt; add_61
</span><span style="font-style:italic;color:#969896;"># Graph fragment:
</span><span style="font-style:italic;color:#969896;">#   %add_61 : [num_users=2] = call_function[target=torch.ops.aten.add.Tensor](args = (%view_13, %convert_element_type_194), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_388 : [num_users=1] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_61, torch.float32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %var_mean_13 : [num_users=2] = call_function[target=torch.ops.aten.var_mean.correction](args = (%convert_element_type_388, [2]), kwargs = {correction: 0, keepdim: True})
</span><span style="font-style:italic;color:#969896;">#   %add_62 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%getitem_31, 1e-05), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %rsqrt_13 : [num_users=1] = call_function[target=torch.ops.aten.rsqrt.default](args = (%add_62,), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %sub_13 : [num_users=1] = call_function[target=torch.ops.aten.sub.Tensor](args = (%add_61, %getitem_32), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_96 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%sub_13, %rsqrt_13), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %mul_97 : [num_users=1] = call_function[target=torch.ops.aten.mul.Tensor](args = (%mul_96, %primals_184), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %add_63 : [num_users=1] = call_function[target=torch.ops.aten.add.Tensor](args = (%mul_97, %primals_183), kwargs = {})
</span><span style="font-style:italic;color:#969896;">#   %convert_element_type_389 : [num_users=3] = call_function[target=torch.ops.prims.convert_element_type.default](args = (%add_63, torch.bfloat16), kwargs = {})
</span><span style="color:#323232;">triton_per_fused_add_native_layer_norm_19 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">async_compile.triton(</span><span style="color:#183691;">'triton_per_fused_add_native_layer_norm_19'</span><span style="color:#323232;">, </span><span style="color:#183691;">'''
</span><span style="color:#183691;">import triton
</span><span style="color:#183691;">import triton.language as tl
</span><span style="color:#183691;">from triton.compiler.compiler import AttrsDescriptor
</span><span style="color:#183691;">
</span><span style="color:#183691;">from torch._inductor.runtime import triton_helpers, triton_heuristics
</span><span style="color:#183691;">from torch._inductor.runtime.triton_helpers import libdevice, math as tl_math
</span><span style="color:#183691;">from torch._inductor.runtime.hints import AutotuneHint, ReductionHint, TileHint, instance_descriptor, DeviceProperties
</span><span style="color:#183691;">
</span><span style="color:#183691;">@triton_heuristics.persistent_reduction(
</span><span style="color:#183691;">    size_hints=[262144, 256],
</span><span style="color:#183691;">    reduction_hint=ReductionHint.INNER,
</span><span style="color:#183691;">    filename=__file__,
</span><span style="color:#183691;">    triton_meta={'signature': {0: '*bf16', 1: '*bf16', 2: '*bf16', 3: '*bf16', 4: '*bf16', 5: 'i32', 6: 'i32'}, 'device': DeviceProperties(type='cuda', index=0, cc=90, major=9, regs_per_multiprocessor=65536, max_threads_per_multi_processor=2048, multi_processor_count=132), 'constants': </span><span style="color:#0086b3;">{}</span><span style="color:#183691;">, 'configs': [AttrsDescriptor(divisible_by_16=(0, 1, 2, 3, 4, 5, 6), equal_to_1=())]},
</span><span style="color:#183691;">    inductor_meta={'autotune_hints': set(), 'kernel_name': 'triton_per_fused_add_native_layer_norm_19', 'mutated_arg_names': [], 'no_x_dim': False, 'num_load': 4, 'num_reduction': 4, 'backend_hash': '2E8109F457B4ECD1A3B73532B0C0132F0FF42EE1C817228004BC4D644F1E8311', 'are_deterministic_algorithms_enabled': False, 'assert_indirect_indexing': True, 'autotune_local_cache': True, 'autotune_pointwise': True, 'autotune_remote_cache': None, 'force_disable_caches': False, 'dynamic_scale_rblock': True, 'max_autotune': False, 'max_autotune_pointwise': False, 'min_split_scan_rblock': 256, 'spill_threshold': 16, 'store_cubin': False, 'is_fbcode': True}
</span><span style="color:#183691;">)
</span><span style="color:#183691;">@triton.jit
</span><span style="color:#183691;">def triton_per_fused_add_native_layer_norm_19(in_ptr0, in_ptr1, in_ptr2, in_ptr3, out_ptr2, xnumel, rnumel, XBLOCK : tl.constexpr):
</span><span style="color:#183691;">    xnumel = 246400
</span><span style="color:#183691;">    rnumel = 192
</span><span style="color:#183691;">    RBLOCK: tl.constexpr = 256
</span><span style="color:#183691;">    xoffset = tl.program_id(0) * XBLOCK
</span><span style="color:#183691;">    xindex = xoffset + tl.arange(0, XBLOCK)[:, None]
</span><span style="color:#183691;">    xmask = xindex &lt; xnumel
</span><span style="color:#183691;">    rindex = tl.arange(0, RBLOCK)[None, :]
</span><span style="color:#183691;">    roffset = 0
</span><span style="color:#183691;">    rmask = rindex &lt; rnumel
</span><span style="color:#183691;">    r1 = rindex
</span><span style="color:#183691;">    x0 = xindex
</span><span style="color:#183691;">    tmp0 = tl.load(in_ptr0 + (r1 + (192*x0)), rmask &amp; xmask, other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tmp1 = tl.load(in_ptr1 + (r1 + (192*x0)), rmask &amp; xmask, other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tmp27 = tl.load(in_ptr2 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tmp30 = tl.load(in_ptr3 + (r1), rmask, eviction_policy='evict_last', other=0.0).to(tl.float32)
</span><span style="color:#183691;">    tmp2 = tmp0 + tmp1
</span><span style="color:#183691;">    tmp3 = tmp2.to(tl.float32)
</span><span style="color:#183691;">    tmp4 = tl.broadcast_to(tmp3, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">    tmp6 = tl.where(rmask &amp; xmask, tmp4, 0)
</span><span style="color:#183691;">    tmp7 = tl.broadcast_to(tmp4, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">    tmp9 = tl.where(rmask &amp; xmask, tmp7, 0)
</span><span style="color:#183691;">    tmp10 = tl.sum(tmp9, 1)[:, None]
</span><span style="color:#183691;">    tmp11 = tl.full([XBLOCK, 1], 192, tl.int32)
</span><span style="color:#183691;">    tmp12 = tmp11.to(tl.float32)
</span><span style="color:#183691;">    tmp13 = tmp10 / tmp12
</span><span style="color:#183691;">    tmp14 = tmp4 - tmp13
</span><span style="color:#183691;">    tmp15 = tmp14 * tmp14
</span><span style="color:#183691;">    tmp16 = tl.broadcast_to(tmp15, [XBLOCK, RBLOCK])
</span><span style="color:#183691;">    tmp18 = tl.where(rmask &amp; xmask, tmp16, 0)
</span><span style="color:#183691;">    tmp19 = tl.sum(tmp18, 1)[:, None]
</span><span style="color:#183691;">    tmp20 = tmp3 - tmp13
</span><span style="color:#183691;">    tmp21 = 192.0
</span><span style="color:#183691;">    tmp22 = tmp19 / tmp21
</span><span style="color:#183691;">    tmp23 = 1e-05
</span><span style="color:#183691;">    tmp24 = tmp22 + tmp23
</span><span style="color:#183691;">    tmp25 = libdevice.rsqrt(tmp24)
</span><span style="color:#183691;">    tmp26 = tmp20 * tmp25
</span><span style="color:#183691;">    tmp28 = tmp27.to(tl.float32)
</span><span style="color:#183691;">    tmp29 = tmp26 * tmp28
</span><span style="color:#183691;">    tmp31 = tmp30.to(tl.float32)
</span><span style="color:#183691;">    tmp32 = tmp29 + tmp31
</span><span style="color:#183691;">    tmp33 = tmp32.to(tl.float32)
</span><span style="color:#183691;">    tl.store(out_ptr2 + (r1 + (192*x0)), tmp33, rmask &amp; xmask)
</span><span style="color:#183691;">'''</span><span style="color:#323232;">, device_str</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda'</span><span style="color:#323232;">)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="color:#323232;">async_compile.wait(</span><span style="color:#62a35c;">globals</span><span style="color:#323232;">())
</span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">async_compile
</span><span style="color:#323232;">
</span><span style="font-weight:bold;color:#a71d5d;">def </span><span style="font-weight:bold;color:#323232;">call</span><span style="color:#323232;">(args):
</span><span style="color:#323232;">    primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">args
</span><span style="color:#323232;">    args.clear()
</span><span style="color:#323232;">    assert_size_stride(primals_1, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">860352</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_2, (</span><span style="color:#0086b3;">769</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">4481</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_3, (</span><span style="color:#0086b3;">769</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_4, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_5, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_6, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_7, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_8, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_9, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_10, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_11, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_12, (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_13, (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_14, (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_15, (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_16, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_17, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">143392</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_18, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_19, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_20, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1536</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1536</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_21, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">2048</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">2048</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_22, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_23, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_24, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_25, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_26, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_27, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_28, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_29, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_30, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_31, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_32, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_33, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_34, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_35, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_36, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_37, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_38, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_39, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_40, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_41, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_42, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_43, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_44, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_45, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_46, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_47, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_48, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_49, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_50, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_51, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_52, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_53, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_54, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_55, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_56, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_57, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_58, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_59, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_60, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_61, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_62, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_63, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_64, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_65, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_66, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_67, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_68, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_69, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_70, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_71, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_72, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_73, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_74, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_75, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_76, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_77, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_78, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_79, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_80, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_81, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_82, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_83, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_84, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_85, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_86, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_87, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_88, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_89, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_90, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_91, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_92, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_93, (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_94, (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_95, (</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_96, (</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_97, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_98, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_99, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_100, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_101, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_102, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_103, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_104, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_105, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_106, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_107, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_108, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_109, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_110, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_111, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_112, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_113, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_114, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_115, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_116, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_117, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_118, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_119, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_120, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_121, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_122, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_123, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_124, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_125, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_126, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_127, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_128, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_129, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_130, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_131, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_132, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_133, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_134, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_135, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_136, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_137, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_138, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_139, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_140, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_141, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_142, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_143, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_144, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_145, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_146, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_147, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_148, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_149, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_150, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_151, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_152, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_153, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_154, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_155, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_156, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_157, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_158, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_159, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_160, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_161, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_162, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_163, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_164, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_165, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_166, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_167, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_168, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_169, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_170, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_171, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_172, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_173, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_174, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_175, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_176, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_177, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_178, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_179, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_180, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_181, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_182, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_183, (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_184, (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_185, (</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_186, (</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_187, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_188, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_189, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_190, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_191, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_192, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_193, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_194, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_195, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_196, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_197, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_198, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_199, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_200, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_201, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_202, (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_203, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_204, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_205, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_206, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_207, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_208, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_209, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_210, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_211, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_212, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_213, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_214, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_215, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_216, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_217, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_218, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_219, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_220, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_221, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_222, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_223, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_224, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_225, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_226, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_227, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_228, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_229, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_230, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_231, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_232, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_233, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_234, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_235, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_236, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_237, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_238, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_239, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_240, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_241, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_242, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_243, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_244, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_245, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_246, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_247, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_248, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_249, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_250, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_251, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_252, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_253, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_254, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_255, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_256, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_257, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_258, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_259, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_260, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_261, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_262, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_263, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_264, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_265, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_266, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_267, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_268, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_269, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_270, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_271, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_272, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">))
</span><span style="color:#323232;">    assert_size_stride(primals_273, (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    assert_size_stride(primals_274, (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ))
</span><span style="color:#323232;">    </span><span style="font-weight:bold;color:#a71d5d;">with </span><span style="color:#323232;">torch.cuda._DeviceGuard(</span><span style="color:#0086b3;">0</span><span style="color:#323232;">):
</span><span style="color:#323232;">        torch.cuda.set_device(</span><span style="color:#0086b3;">0</span><span style="color:#323232;">)
</span><span style="color:#323232;">        buf0 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4488</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">4544</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        stream0 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">get_raw_stream(</span><span style="color:#0086b3;">0</span><span style="color:#323232;">)
</span><span style="color:#323232;">        triton_poi_fused_0.run(primals_1, buf0, </span><span style="color:#0086b3;">551485440</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">551485440</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf1 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">4488</span><span style="color:#323232;">, </span><span style="color:#0086b3;">776</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4544</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        triton_poi_fused_1.run(primals_2, buf1, </span><span style="color:#0086b3;">3482688</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">3482688</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf2 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, </span><span style="color:#0086b3;">776</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">776</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf0, buf1, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf2)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf0
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf1
</span><span style="color:#323232;">        buf3 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">769</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">147648</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [matmul, out], Original ATen: [aten.clone, aten.add]
</span><span style="color:#323232;">        triton_poi_fused_add_clone_2.run(buf2, primals_3, buf3, </span><span style="color:#0086b3;">492160</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">492160</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf2
</span><span style="color:#323232;">        buf4 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [input_1], Original ATen: [aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_4, reinterpret_tensor(buf3, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">147648</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">24576</span><span style="color:#323232;">), reinterpret_tensor(primals_5, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf4)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_4
</span><span style="color:#323232;">        buf8 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized, sigmoid, input_2], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        triton_per_fused_mul_native_layer_norm_sigmoid_3.run(buf4, primals_7, primals_6, buf8, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf9 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized, sigmoid, input_2], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        extern_kernels.mm(buf8, reinterpret_tensor(primals_9, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf9)
</span><span style="color:#323232;">        buf13 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf8; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf8  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_1, sigmoid_1, input_4], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        triton_per_fused_mul_native_layer_norm_sigmoid_4.run(buf9, primals_8, primals_11, primals_10, buf13, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf14 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">143392</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">143424</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_1, sigmoid_1, input_4, input_5], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_12, buf13, reinterpret_tensor(primals_13, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">143392</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf14)
</span><span style="color:#323232;">        buf15 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">6144</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [weight_arch_output], Original ATen: [aten.bmm]
</span><span style="color:#323232;">        extern_kernels.bmm(reinterpret_tensor(primals_1, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">860352</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(buf14, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">143424</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf15)
</span><span style="color:#323232;">        buf16 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [dot_product], Original ATen: [aten.bmm]
</span><span style="color:#323232;">        extern_kernels.bmm(primals_1, buf15, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf16)
</span><span style="color:#323232;">        buf20 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf14; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf14  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t], Original ATen: [aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_native_layer_norm_5.run(buf16, primals_15, primals_14, buf20, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf16
</span><span style="color:#323232;">        buf21 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t, input_6], Original ATen: [aten.native_layer_norm, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_16, buf20, reinterpret_tensor(primals_17, (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">143392</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf21)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf20
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_16
</span><span style="color:#323232;">        buf22 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">), torch.float32)
</span><span style="color:#323232;">        buf23 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">), torch.float32)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_2], Original ATen: [aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_native_layer_norm_6.run(buf21, buf22, buf23, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf25 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        buf29 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [temp_overarch_input, overarch_input], Original ATen: [aten.cat, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_cat_native_layer_norm_7.run(primals_20, primals_21, buf21, buf22, buf23, primals_19, primals_18, primals_23, primals_22, buf25, buf29, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf30 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf13; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf13  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [input_8], Original ATen: [aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_24, buf29, reinterpret_tensor(primals_25, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf30)
</span><span style="color:#323232;">        buf31 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf25; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf25  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf30, reinterpret_tensor(primals_27, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf31)
</span><span style="color:#323232;">        buf32 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf31; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf31  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_8.run(buf32, buf29, primals_26, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf33 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf30; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf30  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, input_10], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_28, buf32, reinterpret_tensor(primals_29, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf33)
</span><span style="color:#323232;">        buf34 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf33, reinterpret_tensor(primals_31, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf34)
</span><span style="color:#323232;">        buf35 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf32; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf32  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_1], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf35, buf29, buf34, primals_30, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf36 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf33; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf33  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_1, input_12], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_32, buf35, reinterpret_tensor(primals_33, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf36)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_32
</span><span style="color:#323232;">        buf37 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf34; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf34  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf36, reinterpret_tensor(primals_35, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf37)
</span><span style="color:#323232;">        buf38 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf35; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf35  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_2], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf38, buf29, buf37, primals_34, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf39 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf9; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf9  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_2, input_14], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_36, buf38, reinterpret_tensor(primals_37, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf39)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_36
</span><span style="color:#323232;">        buf40 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf37; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf37  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf39, reinterpret_tensor(primals_39, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf40)
</span><span style="color:#323232;">        buf41 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf38; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf38  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_3], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf41, buf29, buf40, primals_38, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf42 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_3, input_16], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_40, buf41, reinterpret_tensor(primals_41, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf42)
</span><span style="color:#323232;">        buf43 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf40; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf40  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf42, reinterpret_tensor(primals_43, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf43)
</span><span style="color:#323232;">        buf44 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf41; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf41  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_4], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf44, buf29, buf43, primals_42, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf45 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf42; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf42  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_4, input_18], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_44, buf44, reinterpret_tensor(primals_45, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf45)
</span><span style="color:#323232;">        buf46 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf43; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf43  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf45, reinterpret_tensor(primals_47, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf46)
</span><span style="color:#323232;">        buf47 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf44; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf44  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_5], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf47, buf29, buf46, primals_46, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf48 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf45; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf45  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_5, input_20], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_48, buf47, reinterpret_tensor(primals_49, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf48)
</span><span style="color:#323232;">        buf49 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf46; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf46  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf48, reinterpret_tensor(primals_51, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf49)
</span><span style="color:#323232;">        buf50 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf47; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf47  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_6], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf50, buf29, buf49, primals_50, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf51 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf48; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf48  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_6, input_22], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_52, buf50, reinterpret_tensor(primals_53, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf51)
</span><span style="color:#323232;">        buf52 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf49; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf49  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf51, reinterpret_tensor(primals_55, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf52)
</span><span style="color:#323232;">        buf53 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf50; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf50  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_7], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf53, buf29, buf52, primals_54, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf54 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf51; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf51  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_7, input_24], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_56, buf53, reinterpret_tensor(primals_57, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf54)
</span><span style="color:#323232;">        buf55 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf52; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf52  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf54, reinterpret_tensor(primals_59, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf55)
</span><span style="color:#323232;">        buf56 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf53; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf53  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_8], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf56, buf29, buf55, primals_58, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf57 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf54; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf54  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_8, input_26], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_60, buf56, reinterpret_tensor(primals_61, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf57)
</span><span style="color:#323232;">        buf58 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf55; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf55  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf57, reinterpret_tensor(primals_63, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf58)
</span><span style="color:#323232;">        buf59 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf56; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf56  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_9], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf59, buf29, buf58, primals_62, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf60 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf57; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf57  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_9, input_28], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_64, buf59, reinterpret_tensor(primals_65, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf60)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_64
</span><span style="color:#323232;">        buf61 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf58; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf58  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf60, reinterpret_tensor(primals_67, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf61)
</span><span style="color:#323232;">        buf62 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf59; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf59  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_10], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf62, buf29, buf61, primals_66, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf63 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_10, input_30], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_68, buf62, reinterpret_tensor(primals_69, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf63)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_68
</span><span style="color:#323232;">        buf64 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf61; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf61  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf63, reinterpret_tensor(primals_71, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf64)
</span><span style="color:#323232;">        buf65 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf62; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf62  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_11], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf65, buf29, buf64, primals_70, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf66 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_11, input_32], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_72, buf65, reinterpret_tensor(primals_73, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf66)
</span><span style="color:#323232;">        buf67 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf64; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf64  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf66, reinterpret_tensor(primals_75, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf67)
</span><span style="color:#323232;">        buf68 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf65; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf65  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_12], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf68, buf29, buf67, primals_74, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf69 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf66; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf66  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_12, input_34], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_76, buf68, reinterpret_tensor(primals_77, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf69)
</span><span style="color:#323232;">        buf70 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf67; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf67  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf69, reinterpret_tensor(primals_79, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf70)
</span><span style="color:#323232;">        buf71 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf68; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf68  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_13], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf71, buf29, buf70, primals_78, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf72 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf69; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf69  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_13, input_36], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_80, buf71, reinterpret_tensor(primals_81, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf72)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_80
</span><span style="color:#323232;">        buf73 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf70; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf70  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf72, reinterpret_tensor(primals_83, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf73)
</span><span style="color:#323232;">        buf74 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf71; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf71  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_14], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf74, buf29, buf73, primals_82, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf75 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_14, input_38], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_84, buf74, reinterpret_tensor(primals_85, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf75)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_84
</span><span style="color:#323232;">        buf76 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf73; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf73  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf75, reinterpret_tensor(primals_87, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf76)
</span><span style="color:#323232;">        buf81 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor, interacted_tensor_15, snn_output], Original ATen: [aten.addcmul, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_addcmul_native_layer_norm_10.run(buf74, buf29, buf76, primals_86, primals_89, primals_88, buf81, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf85 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">73920</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        buf82 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf85, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">24768</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [snn_output, input_40], Original ATen: [aten.native_layer_norm, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_90, buf81, reinterpret_tensor(primals_91, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf82)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_90
</span><span style="color:#323232;">        buf83 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf85, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
</span><span style="color:#323232;">        triton_poi_fused_cat_11.run(primals_92, buf83, </span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf84 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf85, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">24576</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">192</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_1], Original ATen: [aten.cat]
</span><span style="color:#323232;">        triton_poi_fused_cat_12.run(buf3, buf84, </span><span style="color:#0086b3;">15728640</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">15728640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf89 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [emb_residual_sum, dhen_layer_output], Original ATen: [aten.add, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_add_native_layer_norm_13.run(buf3, buf85, primals_94, primals_93, buf89, </span><span style="color:#0086b3;">246400</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">246400</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf3
</span><span style="color:#323232;">        buf90 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, </span><span style="color:#0086b3;">392</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        triton_poi_fused_14.run(buf89, buf90, </span><span style="color:#0086b3;">48168960</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">48168960</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf91 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        triton_poi_fused_15.run(primals_95, buf91, </span><span style="color:#0086b3;">150528</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">150528</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf92 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, </span><span style="color:#0086b3;">384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf90, buf91, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf92)
</span><span style="color:#323232;">        buf93 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73728</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [matmul_1, out_1], Original ATen: [aten.clone, aten.add]
</span><span style="color:#323232;">        triton_poi_fused_add_clone_16.run(buf92, primals_96, buf93, </span><span style="color:#0086b3;">245760</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">245760</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf94 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [input_41], Original ATen: [aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_97, reinterpret_tensor(buf93, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73728</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">24576</span><span style="color:#323232;">), reinterpret_tensor(primals_98, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf94)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_97
</span><span style="color:#323232;">        buf98 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_3, sigmoid_3, input_42], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        triton_per_fused_mul_native_layer_norm_sigmoid_3.run(buf94, primals_100, primals_99, buf98, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf99 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_3, sigmoid_3, input_42], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        extern_kernels.mm(buf98, reinterpret_tensor(primals_102, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf99)
</span><span style="color:#323232;">        buf103 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf98; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf98  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_4, sigmoid_4, input_44], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        triton_per_fused_mul_native_layer_norm_sigmoid_4.run(buf99, primals_101, primals_104, primals_103, buf103, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf104 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12352</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_4, sigmoid_4, input_44, input_45], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_105, buf103, reinterpret_tensor(primals_106, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf104)
</span><span style="color:#323232;">        buf105 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf15; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf15  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [weight_arch_output_1], Original ATen: [aten.bmm]
</span><span style="color:#323232;">        extern_kernels.bmm(reinterpret_tensor(buf89, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(buf104, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12352</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf105)
</span><span style="color:#323232;">        buf106 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [dot_product_1], Original ATen: [aten.bmm]
</span><span style="color:#323232;">        extern_kernels.bmm(buf89, buf105, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf106)
</span><span style="color:#323232;">        buf110 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf104; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf104  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t_1], Original ATen: [aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_native_layer_norm_17.run(buf106, primals_108, primals_107, buf110, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf111 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t_1, input_46], Original ATen: [aten.native_layer_norm, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_109, buf110, reinterpret_tensor(primals_110, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf111)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_109
</span><span style="color:#323232;">        buf112 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf23; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf23  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        buf113 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf22; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf22  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_5], Original ATen: [aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_native_layer_norm_6.run(buf111, buf112, buf113, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf115 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf81; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf81  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        buf119 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf76; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf76  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [temp_overarch_input_1, overarch_input_1], Original ATen: [aten.cat, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_cat_native_layer_norm_7.run(primals_20, primals_21, buf111, buf112, buf113, primals_112, primals_111, primals_114, primals_113, buf115, buf119, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf120 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf103; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf103  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [input_48], Original ATen: [aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_115, buf119, reinterpret_tensor(primals_116, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf120)
</span><span style="color:#323232;">        buf121 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf115; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf115  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf120, reinterpret_tensor(primals_118, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf121)
</span><span style="color:#323232;">        buf122 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf121; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf121  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_8.run(buf122, buf119, primals_117, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf123 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf120; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf120  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, input_50], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_119, buf122, reinterpret_tensor(primals_120, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf123)
</span><span style="color:#323232;">        buf124 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf74; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf74  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf123, reinterpret_tensor(primals_122, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf124)
</span><span style="color:#323232;">        buf125 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf122; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf122  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_17], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf125, buf119, buf124, primals_121, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf126 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf123; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf123  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_17, input_52], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_123, buf125, reinterpret_tensor(primals_124, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf126)
</span><span style="color:#323232;">        buf127 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf124; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf124  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf126, reinterpret_tensor(primals_126, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf127)
</span><span style="color:#323232;">        buf128 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf125; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf125  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_18], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf128, buf119, buf127, primals_125, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf129 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf126; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf126  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_18, input_54], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_127, buf128, reinterpret_tensor(primals_128, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf129)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_127
</span><span style="color:#323232;">        buf130 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf127; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf127  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf129, reinterpret_tensor(primals_130, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf130)
</span><span style="color:#323232;">        buf131 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf128; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf128  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_19], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf131, buf119, buf130, primals_129, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf132 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf99; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf99  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_19, input_56], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_131, buf131, reinterpret_tensor(primals_132, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf132)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_131
</span><span style="color:#323232;">        buf133 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf130; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf130  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf132, reinterpret_tensor(primals_134, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf133)
</span><span style="color:#323232;">        buf134 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf131; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf131  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_20], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf134, buf119, buf133, primals_133, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf135 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_20, input_58], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_135, buf134, reinterpret_tensor(primals_136, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf135)
</span><span style="color:#323232;">        buf136 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf133; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf133  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf135, reinterpret_tensor(primals_138, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf136)
</span><span style="color:#323232;">        buf137 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf134; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf134  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_21], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf137, buf119, buf136, primals_137, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf138 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf135; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf135  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_21, input_60], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_139, buf137, reinterpret_tensor(primals_140, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf138)
</span><span style="color:#323232;">        buf139 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf136; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf136  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf138, reinterpret_tensor(primals_142, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf139)
</span><span style="color:#323232;">        buf140 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf137; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf137  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_22], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf140, buf119, buf139, primals_141, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf141 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf138; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf138  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_22, input_62], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_143, buf140, reinterpret_tensor(primals_144, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf141)
</span><span style="color:#323232;">        buf142 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf139; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf139  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf141, reinterpret_tensor(primals_146, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf142)
</span><span style="color:#323232;">        buf143 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf140; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf140  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_23], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf143, buf119, buf142, primals_145, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf144 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf141; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf141  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_23, input_64], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_147, buf143, reinterpret_tensor(primals_148, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf144)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_147
</span><span style="color:#323232;">        buf145 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf142; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf142  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf144, reinterpret_tensor(primals_150, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf145)
</span><span style="color:#323232;">        buf146 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf143; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf143  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_24], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf146, buf119, buf145, primals_149, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf147 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_24, input_66], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_151, buf146, reinterpret_tensor(primals_152, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf147)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_151
</span><span style="color:#323232;">        buf148 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf145; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf145  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf147, reinterpret_tensor(primals_154, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf148)
</span><span style="color:#323232;">        buf149 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf146; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf146  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_25], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf149, buf119, buf148, primals_153, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf150 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_25, input_68], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_155, buf149, reinterpret_tensor(primals_156, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf150)
</span><span style="color:#323232;">        buf151 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf148; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf148  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf150, reinterpret_tensor(primals_158, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf151)
</span><span style="color:#323232;">        buf152 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf149; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf149  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_26], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf152, buf119, buf151, primals_157, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf153 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf150; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf150  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_26, input_70], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_159, buf152, reinterpret_tensor(primals_160, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf153)
</span><span style="color:#323232;">        buf154 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf151; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf151  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf153, reinterpret_tensor(primals_162, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf154)
</span><span style="color:#323232;">        buf155 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf152; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf152  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_27], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf155, buf119, buf154, primals_161, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf156 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf153; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf153  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_27, input_72], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_163, buf155, reinterpret_tensor(primals_164, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf156)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_163
</span><span style="color:#323232;">        buf157 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf154; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf154  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf156, reinterpret_tensor(primals_166, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf157)
</span><span style="color:#323232;">        buf158 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf155; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf155  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_28], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf158, buf119, buf157, primals_165, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf159 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_28, input_74], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_167, buf158, reinterpret_tensor(primals_168, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf159)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_167
</span><span style="color:#323232;">        buf160 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf157; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf157  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf159, reinterpret_tensor(primals_170, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf160)
</span><span style="color:#323232;">        buf161 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf158; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf158  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_29], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf161, buf119, buf160, primals_169, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf162 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_29, input_76], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_171, buf161, reinterpret_tensor(primals_172, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf162)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_171
</span><span style="color:#323232;">        buf163 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf160; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf160  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf162, reinterpret_tensor(primals_174, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf163)
</span><span style="color:#323232;">        buf164 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf161; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf161  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_30], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf164, buf119, buf163, primals_173, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf165 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_30, input_78], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_175, buf164, reinterpret_tensor(primals_176, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf165)
</span><span style="color:#323232;">        buf166 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf163; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf163  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf165, reinterpret_tensor(primals_178, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf166)
</span><span style="color:#323232;">        buf171 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf29; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf29  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_16, interacted_tensor_31, snn_output_1], Original ATen: [aten.addcmul, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_addcmul_native_layer_norm_10.run(buf164, buf119, buf166, primals_177, primals_180, primals_179, buf171, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf175 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">73920</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        buf172 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf175, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">24768</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [snn_output_1, input_80], Original ATen: [aten.native_layer_norm, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_181, buf171, reinterpret_tensor(primals_182, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf172)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_181
</span><span style="color:#323232;">        buf173 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf175, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_3], Original ATen: [aten.cat]
</span><span style="color:#323232;">        triton_poi_fused_cat_11.run(primals_92, buf173, </span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf174 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf175, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">24576</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">192</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_3], Original ATen: [aten.cat]
</span><span style="color:#323232;">        triton_poi_fused_cat_18.run(buf93, buf174, </span><span style="color:#0086b3;">15728640</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">15728640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf179 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [emb_residual_sum_1, dhen_layer_output_1], Original ATen: [aten.add, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_per_fused_add_native_layer_norm_19.run(buf175, buf89, primals_184, primals_183, buf179, </span><span style="color:#0086b3;">246400</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">246400</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf180 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf90; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf90  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        triton_poi_fused_14.run(buf179, buf180, </span><span style="color:#0086b3;">48168960</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">48168960</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf181 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf91; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf91  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        triton_poi_fused_15.run(primals_185, buf181, </span><span style="color:#0086b3;">150528</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">150528</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf182 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf93, (</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, </span><span style="color:#0086b3;">384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">); </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf93  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf180, buf181, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf182)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf180
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf181
</span><span style="color:#323232;">        buf183 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf92, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73728</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">); </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf92  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [matmul_2, out_2], Original ATen: [aten.clone, aten.add]
</span><span style="color:#323232;">        triton_poi_fused_add_clone_16.run(buf182, primals_186, buf183, </span><span style="color:#0086b3;">245760</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">245760</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf182
</span><span style="color:#323232;">        buf184 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf165; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf165  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [input_81], Original ATen: [aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_187, reinterpret_tensor(buf183, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73728</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">24576</span><span style="color:#323232;">), reinterpret_tensor(primals_188, (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf184)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_187
</span><span style="color:#323232;">        buf188 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_6, sigmoid_6, input_82], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        triton_per_fused_mul_native_layer_norm_sigmoid_3.run(buf184, primals_190, primals_189, buf188, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf189 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_6, sigmoid_6, input_82], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        extern_kernels.mm(buf188, reinterpret_tensor(primals_192, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf189)
</span><span style="color:#323232;">        buf193 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf188; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf188  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_7, sigmoid_7, input_84], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul]
</span><span style="color:#323232;">        triton_per_fused_mul_native_layer_norm_sigmoid_4.run(buf189, primals_191, primals_194, primals_193, buf193, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf194 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf110; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf110  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_7, sigmoid_7, input_84, input_85], Original ATen: [aten.native_layer_norm, aten.sigmoid, aten.mul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_195, buf193, reinterpret_tensor(primals_196, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf194)
</span><span style="color:#323232;">        buf195 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf105; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf105  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [weight_arch_output_2], Original ATen: [aten.bmm]
</span><span style="color:#323232;">        extern_kernels.bmm(reinterpret_tensor(buf179, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(buf194, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12352</span><span style="color:#323232;">, </span><span style="color:#0086b3;">32</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf195)
</span><span style="color:#323232;">        buf196 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf106; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf106  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [dot_product_2], Original ATen: [aten.bmm]
</span><span style="color:#323232;">        extern_kernels.bmm(buf179, buf195, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf196)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf195
</span><span style="color:#323232;">        buf200 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf194; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf194  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t_2], Original ATen: [aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_native_layer_norm_17.run(buf196, primals_198, primals_197, buf200, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf196
</span><span style="color:#323232;">        buf201 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [t_2, input_86], Original ATen: [aten.native_layer_norm, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_199, buf200, reinterpret_tensor(primals_200, (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf201)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf200
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_199
</span><span style="color:#323232;">        buf202 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf113; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf113  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        buf203 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf112; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf112  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [normalized_8], Original ATen: [aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_native_layer_norm_6.run(buf201, buf202, buf203, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf205 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf171; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf171  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        buf209 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf166; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf166  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [temp_overarch_input_2, overarch_input_2], Original ATen: [aten.cat, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_cat_native_layer_norm_7.run(primals_20, primals_21, buf201, buf202, buf203, primals_202, primals_201, primals_204, primals_203, buf205, buf209, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf202
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf203
</span><span style="color:#323232;">        buf210 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf193; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf193  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [input_88], Original ATen: [aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_205, buf209, reinterpret_tensor(primals_206, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf210)
</span><span style="color:#323232;">        buf211 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf205; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf205  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf210, reinterpret_tensor(primals_208, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf211)
</span><span style="color:#323232;">        buf212 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf211; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf211  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_8.run(buf212, buf209, primals_207, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf213 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf210; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf210  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, input_90], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_209, buf212, reinterpret_tensor(primals_210, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf213)
</span><span style="color:#323232;">        buf214 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf164; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf164  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf213, reinterpret_tensor(primals_212, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf214)
</span><span style="color:#323232;">        buf215 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf212; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf212  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_33], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf215, buf209, buf214, primals_211, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf216 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf213; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf213  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_33, input_92], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_213, buf215, reinterpret_tensor(primals_214, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf216)
</span><span style="color:#323232;">        buf217 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf214; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf214  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf216, reinterpret_tensor(primals_216, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf217)
</span><span style="color:#323232;">        buf218 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf215; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf215  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_34], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf218, buf209, buf217, primals_215, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf219 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf216; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf216  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_34, input_94], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_217, buf218, reinterpret_tensor(primals_218, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf219)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_217
</span><span style="color:#323232;">        buf220 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf217; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf217  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf219, reinterpret_tensor(primals_220, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf220)
</span><span style="color:#323232;">        buf221 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf218; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf218  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_35], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf221, buf209, buf220, primals_219, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf222 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf189; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf189  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_35, input_96], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_221, buf221, reinterpret_tensor(primals_222, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf222)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_221
</span><span style="color:#323232;">        buf223 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf220; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf220  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf222, reinterpret_tensor(primals_224, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf223)
</span><span style="color:#323232;">        buf224 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf221; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf221  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_36], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf224, buf209, buf223, primals_223, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf225 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_36, input_98], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_225, buf224, reinterpret_tensor(primals_226, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf225)
</span><span style="color:#323232;">        buf226 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf223; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf223  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf225, reinterpret_tensor(primals_228, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf226)
</span><span style="color:#323232;">        buf227 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf224; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf224  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_37], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf227, buf209, buf226, primals_227, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf228 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf225; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf225  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_37, input_100], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_229, buf227, reinterpret_tensor(primals_230, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf228)
</span><span style="color:#323232;">        buf229 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf226; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf226  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf228, reinterpret_tensor(primals_232, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf229)
</span><span style="color:#323232;">        buf230 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf227; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf227  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_38], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf230, buf209, buf229, primals_231, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf231 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf228; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf228  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_38, input_102], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_233, buf230, reinterpret_tensor(primals_234, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf231)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_233
</span><span style="color:#323232;">        buf232 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf229; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf229  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf231, reinterpret_tensor(primals_236, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf232)
</span><span style="color:#323232;">        buf233 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf230; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf230  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_39], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf233, buf209, buf232, primals_235, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf234 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_39, input_104], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_237, buf233, reinterpret_tensor(primals_238, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf234)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_237
</span><span style="color:#323232;">        buf235 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf232; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf232  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf234, reinterpret_tensor(primals_240, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf235)
</span><span style="color:#323232;">        buf236 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf233; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf233  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_40], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf236, buf209, buf235, primals_239, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf237 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_40, input_106], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_241, buf236, reinterpret_tensor(primals_242, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf237)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_241
</span><span style="color:#323232;">        buf238 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf235; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf235  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf237, reinterpret_tensor(primals_244, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf238)
</span><span style="color:#323232;">        buf239 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf236; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf236  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_41], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf239, buf209, buf238, primals_243, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf240 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_41, input_108], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_245, buf239, reinterpret_tensor(primals_246, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf240)
</span><span style="color:#323232;">        buf241 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf238; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf238  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf240, reinterpret_tensor(primals_248, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf241)
</span><span style="color:#323232;">        buf242 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf239; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf239  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_42], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf242, buf209, buf241, primals_247, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf243 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf240; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf240  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_42, input_110], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_249, buf242, reinterpret_tensor(primals_250, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf243)
</span><span style="color:#323232;">        buf244 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf241; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf241  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf243, reinterpret_tensor(primals_252, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf244)
</span><span style="color:#323232;">        buf245 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf242; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf242  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_43], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf245, buf209, buf244, primals_251, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf246 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf243; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf243  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_43, input_112], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_253, buf245, reinterpret_tensor(primals_254, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf246)
</span><span style="color:#323232;">        buf247 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf244; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf244  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf246, reinterpret_tensor(primals_256, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf247)
</span><span style="color:#323232;">        buf248 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf245; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf245  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_44], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf248, buf209, buf247, primals_255, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf249 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf246; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf246  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_44, input_114], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_257, buf248, reinterpret_tensor(primals_258, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf249)
</span><span style="color:#323232;">        buf250 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf247; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf247  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf249, reinterpret_tensor(primals_260, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf250)
</span><span style="color:#323232;">        buf251 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf248; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf248  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_45], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf251, buf209, buf250, primals_259, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf252 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf249; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf249  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_45, input_116], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_261, buf251, reinterpret_tensor(primals_262, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf252)
</span><span style="color:#323232;">        buf253 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf250; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf250  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf252, reinterpret_tensor(primals_264, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf253)
</span><span style="color:#323232;">        buf254 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf251; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf251  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_46], Original ATen: [aten.addcmul]
</span><span style="color:#323232;">        triton_poi_fused_addcmul_9.run(buf254, buf209, buf253, primals_263, </span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">5365760</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        buf255 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf252; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf252  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_46, input_118], Original ATen: [aten.addcmul, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_265, buf254, reinterpret_tensor(primals_266, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf255)
</span><span style="color:#323232;">        buf256 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf253; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf253  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [], Original ATen: []
</span><span style="color:#323232;">        extern_kernels.mm(buf255, reinterpret_tensor(primals_268, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf256)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf255
</span><span style="color:#323232;">        buf261 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">buf119; </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf119  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [interacted_tensor_32, interacted_tensor_47, snn_output_2], Original ATen: [aten.addcmul, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_red_fused_addcmul_native_layer_norm_10.run(buf254, buf209, buf256, primals_267, primals_270, primals_269, buf261, </span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf209
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf254
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf256
</span><span style="color:#323232;">        buf265 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf89, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">73920</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">); </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf89  </span><span style="font-style:italic;color:#969896;"># reuse
</span><span style="color:#323232;">        buf262 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf265, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">24768</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [snn_output_2, input_120], Original ATen: [aten.native_layer_norm, aten.addmm]
</span><span style="color:#323232;">        extern_kernels.addmm(primals_271, buf261, reinterpret_tensor(primals_272, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), alpha</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, beta</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, out</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">buf262)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf261
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_271
</span><span style="color:#323232;">        buf263 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf265, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_5], Original ATen: [aten.cat]
</span><span style="color:#323232;">        triton_poi_fused_cat_11.run(primals_92, buf263, </span><span style="color:#0086b3;">122880</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">122880</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_92
</span><span style="color:#323232;">        buf264 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">reinterpret_tensor(buf265, (</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">24576</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), </span><span style="color:#0086b3;">192</span><span style="color:#323232;">)  </span><span style="font-style:italic;color:#969896;"># alias
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [cat_5], Original ATen: [aten.cat]
</span><span style="color:#323232;">        triton_poi_fused_cat_18.run(buf183, buf264, </span><span style="color:#0086b3;">15728640</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">15728640</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf183
</span><span style="color:#323232;">        buf269 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">empty_strided_cuda((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">73920</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), torch.bfloat16)
</span><span style="color:#323232;">        </span><span style="font-style:italic;color:#969896;"># Topologically Sorted Source Nodes: [emb_residual_sum_2, dhen_layer_output_2], Original ATen: [aten.add, aten.native_layer_norm]
</span><span style="color:#323232;">        triton_per_fused_add_native_layer_norm_19.run(buf265, buf179, primals_274, primals_273, buf269, </span><span style="color:#0086b3;">246400</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, grid</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">grid(</span><span style="color:#0086b3;">246400</span><span style="color:#323232;">), stream</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">stream0)
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">buf179
</span><span style="color:#323232;">        </span><span style="font-weight:bold;color:#a71d5d;">del </span><span style="color:#323232;">primals_273
</span><span style="color:#323232;">    </span><span style="font-weight:bold;color:#a71d5d;">return </span><span style="color:#323232;">(buf269, primals_1, primals_3, primals_6, primals_7, primals_8, primals_10, primals_11, primals_12, primals_14, primals_15, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_26, primals_28, primals_30, primals_34, primals_38, primals_40, primals_42, primals_44, primals_46, primals_48, primals_50, primals_52, primals_54, primals_56, primals_58, primals_60, primals_62, primals_66, primals_70, primals_72, primals_74, primals_76, primals_78, primals_82, primals_86, primals_88, primals_89, primals_93, primals_94, primals_95, primals_96, primals_99, primals_100, primals_101, primals_103, primals_104, primals_105, primals_107, primals_108, primals_111, primals_112, primals_113, primals_114, primals_115, primals_117, primals_119, primals_121, primals_123, primals_125, primals_129, primals_133, primals_135, primals_137, primals_139, primals_141, primals_143, primals_145, primals_149, primals_153, primals_155, primals_157, primals_159, primals_161, primals_165, primals_169, primals_173, primals_175, primals_177, primals_179, primals_180, primals_183, primals_184, primals_185, primals_186, primals_189, primals_190, primals_191, primals_193, primals_194, primals_195, primals_197, primals_198, primals_201, primals_202, primals_203, primals_204, primals_205, primals_207, primals_209, primals_211, primals_213, primals_215, primals_219, primals_223, primals_225, primals_227, primals_229, primals_231, primals_235, primals_239, primals_243, primals_245, primals_247, primals_249, primals_251, primals_253, primals_255, primals_257, primals_259, primals_261, primals_263, primals_265, primals_267, primals_269, primals_270, primals_274, reinterpret_tensor(primals_2, (</span><span style="color:#0086b3;">4481</span><span style="color:#323232;">, </span><span style="color:#0086b3;">769</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf4, reinterpret_tensor(primals_9, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_13, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">143392</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf21, reinterpret_tensor(primals_25, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_27, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_29, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_31, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf36, reinterpret_tensor(primals_35, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf39, reinterpret_tensor(primals_39, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_41, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_43, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_45, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_47, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_49, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_51, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_53, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_55, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_57, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_59, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_61, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_63, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf60, reinterpret_tensor(primals_67, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf63, reinterpret_tensor(primals_71, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_73, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_75, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_77, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_79, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf72, reinterpret_tensor(primals_83, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf75, reinterpret_tensor(primals_87, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf85, buf94, reinterpret_tensor(primals_102, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_106, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf111, reinterpret_tensor(primals_116, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_118, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_120, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_122, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_124, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_126, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf129, reinterpret_tensor(primals_130, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf132, reinterpret_tensor(primals_134, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_136, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_138, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_140, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_142, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_144, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_146, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf144, reinterpret_tensor(primals_150, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf147, reinterpret_tensor(primals_154, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_156, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_158, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_160, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_162, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf156, reinterpret_tensor(primals_166, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf159, reinterpret_tensor(primals_170, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf162, reinterpret_tensor(primals_174, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_176, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_178, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf175, buf184, reinterpret_tensor(primals_192, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_196, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf201, reinterpret_tensor(primals_206, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_208, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_210, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_212, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_214, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_216, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf219, reinterpret_tensor(primals_220, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf222, reinterpret_tensor(primals_224, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_226, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_228, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_230, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_232, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf231, reinterpret_tensor(primals_236, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf234, reinterpret_tensor(primals_240, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf237, reinterpret_tensor(primals_244, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_246, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_248, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_250, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_252, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_254, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_256, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_258, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_260, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_262, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_264, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_266, (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), reinterpret_tensor(primals_268, (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), </span><span style="color:#0086b3;">0</span><span style="color:#323232;">), buf265, primals_272, primals_242, primals_238, primals_234, primals_222, primals_218, primals_200, primals_188, primals_182, primals_172, primals_168, primals_164, primals_152, primals_148, primals_132, primals_128, primals_110, primals_98, primals_91, primals_85, primals_81, primals_69, primals_65, primals_37, primals_33, primals_17, primals_5, )
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-weight:bold;color:#a71d5d;">def </span><span style="font-weight:bold;color:#323232;">benchmark_compiled_module</span><span style="color:#323232;">(times</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">10</span><span style="color:#323232;">, repeat</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#0086b3;">10</span><span style="color:#323232;">):
</span><span style="color:#323232;">    </span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._dynamo.testing </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">rand_strided
</span><span style="color:#323232;">    </span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.utils </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">print_performance
</span><span style="color:#323232;">    primals_1 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">860352</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_2 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">769</span><span style="color:#323232;">, </span><span style="color:#0086b3;">4481</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">4481</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_3 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">769</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_4 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_5 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_6 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_7 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_8 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_9 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_10 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_11 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_12 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_13 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_14 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_15 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_16 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_17 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">143392</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">143392</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_18 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_19 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_20 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1536</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1536</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_21 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">2048</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">2048</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_22 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_23 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_24 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_25 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_26 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_27 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_28 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_29 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_30 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_31 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_32 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_33 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_34 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_35 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_36 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_37 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_38 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_39 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_40 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_41 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_42 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_43 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_44 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_45 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_46 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_47 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_48 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_49 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_50 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_51 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_52 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_53 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_54 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_55 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_56 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_57 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_58 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_59 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_60 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_61 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_62 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_63 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_64 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_65 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_66 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_67 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_68 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_69 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_70 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_71 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_72 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_73 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_74 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_75 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_76 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_77 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_78 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_79 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_80 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_81 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_82 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_83 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_84 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_85 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_86 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_87 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_88 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_89 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_90 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_91 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_92 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">640</span><span style="color:#323232;">, </span><span style="color:#0086b3;">192</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_93 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_94 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_95 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_96 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_97 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_98 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_99 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_100 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_101 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_102 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_103 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_104 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_105 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_106 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_107 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_108 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_109 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_110 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_111 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_112 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_113 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_114 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_115 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_116 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_117 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_118 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_119 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_120 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_121 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_122 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_123 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_124 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_125 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_126 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_127 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_128 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_129 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_130 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_131 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_132 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_133 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_134 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_135 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_136 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_137 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_138 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_139 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_140 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_141 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_142 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_143 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_144 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_145 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_146 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_147 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_148 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_149 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_150 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_151 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_152 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_153 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_154 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_155 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_156 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_157 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_158 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_159 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_160 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_161 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_162 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_163 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_164 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_165 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_166 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_167 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_168 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_169 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_170 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_171 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_172 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_173 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_174 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_175 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_176 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_177 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_178 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_179 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_180 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_181 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_182 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_183 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_184 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_185 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">385</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">385</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_186 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_187 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_188 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">49152</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_189 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_190 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_191 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_192 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_193 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_194 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_195 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_196 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_197 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_198 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_199 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_200 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, </span><span style="color:#0086b3;">12320</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">12320</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_201 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_202 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">4800</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_203 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_204 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_205 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_206 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_207 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_208 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_209 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_210 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_211 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_212 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_213 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_214 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_215 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_216 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_217 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_218 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_219 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_220 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_221 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_222 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_223 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_224 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_225 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_226 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_227 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_228 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_229 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_230 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_231 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_232 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_233 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_234 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_235 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_236 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_237 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_238 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_239 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_240 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_241 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_242 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_243 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_244 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_245 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_246 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_247 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_248 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_249 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_250 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_251 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_252 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_253 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_254 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_255 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_256 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_257 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_258 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_259 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_260 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_261 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_262 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_263 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_264 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_265 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_266 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_267 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_268 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1024</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">1024</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_269 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_270 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_271 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_272 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">49152</span><span style="color:#323232;">, </span><span style="color:#0086b3;">8384</span><span style="color:#323232;">), (</span><span style="color:#0086b3;">8384</span><span style="color:#323232;">, </span><span style="color:#0086b3;">1</span><span style="color:#323232;">), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_273 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    primals_274 </span><span style="font-weight:bold;color:#a71d5d;">= </span><span style="color:#323232;">rand_strided((</span><span style="color:#0086b3;">192</span><span style="color:#323232;">, ), (</span><span style="color:#0086b3;">1</span><span style="color:#323232;">, ), device</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#183691;">'cuda:0'</span><span style="color:#323232;">, dtype</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">torch.bfloat16)
</span><span style="color:#323232;">    fn </span><span style="font-weight:bold;color:#a71d5d;">= lambda</span><span style="color:#323232;">: call([primals_1, primals_2, primals_3, primals_4, primals_5, primals_6, primals_7, primals_8, primals_9, primals_10, primals_11, primals_12, primals_13, primals_14, primals_15, primals_16, primals_17, primals_18, primals_19, primals_20, primals_21, primals_22, primals_23, primals_24, primals_25, primals_26, primals_27, primals_28, primals_29, primals_30, primals_31, primals_32, primals_33, primals_34, primals_35, primals_36, primals_37, primals_38, primals_39, primals_40, primals_41, primals_42, primals_43, primals_44, primals_45, primals_46, primals_47, primals_48, primals_49, primals_50, primals_51, primals_52, primals_53, primals_54, primals_55, primals_56, primals_57, primals_58, primals_59, primals_60, primals_61, primals_62, primals_63, primals_64, primals_65, primals_66, primals_67, primals_68, primals_69, primals_70, primals_71, primals_72, primals_73, primals_74, primals_75, primals_76, primals_77, primals_78, primals_79, primals_80, primals_81, primals_82, primals_83, primals_84, primals_85, primals_86, primals_87, primals_88, primals_89, primals_90, primals_91, primals_92, primals_93, primals_94, primals_95, primals_96, primals_97, primals_98, primals_99, primals_100, primals_101, primals_102, primals_103, primals_104, primals_105, primals_106, primals_107, primals_108, primals_109, primals_110, primals_111, primals_112, primals_113, primals_114, primals_115, primals_116, primals_117, primals_118, primals_119, primals_120, primals_121, primals_122, primals_123, primals_124, primals_125, primals_126, primals_127, primals_128, primals_129, primals_130, primals_131, primals_132, primals_133, primals_134, primals_135, primals_136, primals_137, primals_138, primals_139, primals_140, primals_141, primals_142, primals_143, primals_144, primals_145, primals_146, primals_147, primals_148, primals_149, primals_150, primals_151, primals_152, primals_153, primals_154, primals_155, primals_156, primals_157, primals_158, primals_159, primals_160, primals_161, primals_162, primals_163, primals_164, primals_165, primals_166, primals_167, primals_168, primals_169, primals_170, primals_171, primals_172, primals_173, primals_174, primals_175, primals_176, primals_177, primals_178, primals_179, primals_180, primals_181, primals_182, primals_183, primals_184, primals_185, primals_186, primals_187, primals_188, primals_189, primals_190, primals_191, primals_192, primals_193, primals_194, primals_195, primals_196, primals_197, primals_198, primals_199, primals_200, primals_201, primals_202, primals_203, primals_204, primals_205, primals_206, primals_207, primals_208, primals_209, primals_210, primals_211, primals_212, primals_213, primals_214, primals_215, primals_216, primals_217, primals_218, primals_219, primals_220, primals_221, primals_222, primals_223, primals_224, primals_225, primals_226, primals_227, primals_228, primals_229, primals_230, primals_231, primals_232, primals_233, primals_234, primals_235, primals_236, primals_237, primals_238, primals_239, primals_240, primals_241, primals_242, primals_243, primals_244, primals_245, primals_246, primals_247, primals_248, primals_249, primals_250, primals_251, primals_252, primals_253, primals_254, primals_255, primals_256, primals_257, primals_258, primals_259, primals_260, primals_261, primals_262, primals_263, primals_264, primals_265, primals_266, primals_267, primals_268, primals_269, primals_270, primals_271, primals_272, primals_273, primals_274])
</span><span style="color:#323232;">    </span><span style="font-weight:bold;color:#a71d5d;">return </span><span style="color:#323232;">print_performance(fn, times</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">times, repeat</span><span style="font-weight:bold;color:#a71d5d;">=</span><span style="color:#323232;">repeat)
</span><span style="color:#323232;">
</span><span style="color:#323232;">
</span><span style="font-weight:bold;color:#a71d5d;">if </span><span style="color:#323232;">__name__ </span><span style="font-weight:bold;color:#a71d5d;">== </span><span style="color:#183691;">"__main__"</span><span style="color:#323232;">:
</span><span style="color:#323232;">    </span><span style="font-weight:bold;color:#a71d5d;">from </span><span style="color:#323232;">torch._inductor.wrapper_benchmark </span><span style="font-weight:bold;color:#a71d5d;">import </span><span style="color:#323232;">compiled_module_main
</span><span style="color:#323232;">    compiled_module_main(</span><span style="color:#183691;">'None'</span><span style="color:#323232;">, benchmark_compiled_module)
</span></pre>
</body></html>